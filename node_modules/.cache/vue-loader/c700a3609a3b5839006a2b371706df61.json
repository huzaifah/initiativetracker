{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Wizard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Wizard.vue","mtime":1557649083478},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FirstStep from \"./Wizard/FirstStep.vue\";\nimport SecondStep from \"./Wizard/SecondStep.vue\";\nimport ThirdStep from \"./Wizard/ThirdStep.vue\";\nimport swal from \"sweetalert2\";\nimport { SimpleWizard, WizardTab } from \"@/components\";\nimport { mapState, mapGetters, mapMutations, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      wizardModel: {},\n      initiative: \"\",\n      formData: {},\n      id: 0\n    };\n  },\n  created() {\n    this.id = this.$route.params.id;\n    if (this.id != null) {\n      this.formData = this.tableData.find(line => line.id == this.id);\n      this.initiative = this.formData.name;\n    } else {\n      this.formData = {};\n      this.initiative = \"\";\n    }\n  },\n  computed: {\n    ...mapState({\n      tableData: state => state.store.lines\n    })\n  },\n  components: {\n    FirstStep,\n    SecondStep,\n    ThirdStep,\n    SimpleWizard,\n    WizardTab\n  },\n  methods: {\n    getInitiativeName(event) {\n      this.initiative = event;\n    },\n    validateStep(ref) {\n      return this.$refs[ref].validate();\n    },\n    onFirstStepSaved(data) {\n      if (this.id == null) {\n        this.id = this.tableData.length + 1;\n      }\n\n      if (data != null) {\n        data.id = this.id;\n        this.addInitiative(data);\n        this.formData = data;\n      }\n    },\n    onSecondStepSaved(data) {\n      if (data != null) {\n        this.formData.target = data;\n        this.addInitiative(this.formData);\n      }\n    },\n    onThirdStepSaved(data) {\n      if (data != null) {\n        this.formData.result = data;\n        this.addInitiative(this.formData);\n      }\n    },\n    onStepValidated(validated, model) {\n      this.wizardModel = { ...this.wizardModel, ...model };\n    },\n    wizardComplete() {\n      this.storeInitiativeData();\n      swal.fire({\n        title: \"Success!\",\n        text: \"Your initiative is successfully submitted\",\n        type: \"success\",\n        confirmButtonClass: \"md-button md-success\",\n        buttonsStyling: false\n      });\n      this.$router.push(\"/table-list/paginated\");\n    },\n    ...mapMutations({\n      addInitiative: \"store/addInitiative\"\n    }),\n    ...mapActions({\n      storeInitiativeData: \"store/storeInitiativeData\"\n    })\n  }\n};\n",{"version":3,"sources":["Wizard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Wizard.vue","sourceRoot":"src/pages/Dashboard/Forms","sourcesContent":["<template>\n  <div class=\"md-layout\">\n    <div class=\"md-layout-item md-size-66 md-xsmall-size-80 mx-auto\">\n      <simple-wizard>\n        <template slot=\"header\">\n          <h3 class=\"title\">{{ initiative || \"Initiative\" }}</h3>\n        </template>\n\n        <wizard-tab :before-change=\"() => validateStep('step1')\">\n          <template slot=\"label\">General Information</template>\n          <first-step\n            ref=\"step1\"\n            @on-save=\"onFirstStepSaved\"\n            @on-validated=\"onStepValidated\"\n            :initiative=\"initiative\"\n            :record=\"formData\"\n            @interface=\"getInitiativeName\"\n          ></first-step>\n        </wizard-tab>\n\n        <wizard-tab :before-change=\"() => validateStep('step2')\">\n          <template slot=\"label\">Target</template>\n          <second-step ref=\"step2\" :record=\"formData\" @on-save=\"onSecondStepSaved\" @on-validated=\"onStepValidated\"></second-step>\n        </wizard-tab>\n\n        <wizard-tab :before-change=\"() => validateStep('step3')\">\n          <template slot=\"label\">Result</template>\n          <third-step ref=\"step3\" :record=\"formData\" @on-save=\"onThirdStepSaved\" @on-validated=\"wizardComplete\"></third-step>\n        </wizard-tab>\n      </simple-wizard>\n    </div>\n  </div>\n</template>\n<script>\nimport FirstStep from \"./Wizard/FirstStep.vue\";\nimport SecondStep from \"./Wizard/SecondStep.vue\";\nimport ThirdStep from \"./Wizard/ThirdStep.vue\";\nimport swal from \"sweetalert2\";\nimport { SimpleWizard, WizardTab } from \"@/components\";\nimport { mapState, mapGetters, mapMutations, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      wizardModel: {},\n      initiative: \"\",\n      formData: {},\n      id: 0\n    };\n  },\n  created() {\n    this.id = this.$route.params.id;\n    if (this.id != null) {\n      this.formData = this.tableData.find(line => line.id == this.id);\n      this.initiative = this.formData.name;\n    } else {\n      this.formData = {};\n      this.initiative = \"\";\n    }\n  },\n  computed: {\n    ...mapState({\n      tableData: state => state.store.lines\n    })\n  },\n  components: {\n    FirstStep,\n    SecondStep,\n    ThirdStep,\n    SimpleWizard,\n    WizardTab\n  },\n  methods: {\n    getInitiativeName(event) {\n      this.initiative = event;\n    },\n    validateStep(ref) {\n      return this.$refs[ref].validate();\n    },\n    onFirstStepSaved(data) {\n      if (this.id == null) {\n        this.id = this.tableData.length + 1;\n      }\n\n      if (data != null) {\n        data.id = this.id;\n        this.addInitiative(data);\n        this.formData = data;\n      }\n    },\n    onSecondStepSaved(data) {\n      if (data != null) {\n        this.formData.target = data;\n        this.addInitiative(this.formData);\n      }\n    },\n    onThirdStepSaved(data) {\n      if (data != null) {\n        this.formData.result = data;\n        this.addInitiative(this.formData);\n      }\n    },\n    onStepValidated(validated, model) {\n      this.wizardModel = { ...this.wizardModel, ...model };\n    },\n    wizardComplete() {\n      this.storeInitiativeData();\n      swal.fire({\n        title: \"Success!\",\n        text: \"Your initiative is successfully submitted\",\n        type: \"success\",\n        confirmButtonClass: \"md-button md-success\",\n        buttonsStyling: false\n      });\n      this.$router.push(\"/table-list/paginated\");\n    },\n    ...mapMutations({\n      addInitiative: \"store/addInitiative\"\n    }),\n    ...mapActions({\n      storeInitiativeData: \"store/storeInitiativeData\"\n    })\n  }\n};\n</script>\n"]}]}