{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/ValidationForms/RegisterForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/ValidationForms/RegisterForm.vue","mtime":1549899732000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SlideYDownTransition } from \"vue2-transitions\";\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  data() {\n    return {\n      boolean: null,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      touched: {\n        email: false,\n        password: false,\n        confirmPass: false\n      },\n      modelValidations: {\n        email: {\n          required: true,\n          email: true\n        },\n        password: {\n          required: true,\n          min: 5\n        },\n        confirmPassword: {\n          required: true,\n          confirmed: \"password\"\n        }\n      }\n    };\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit(\"on-submit\", this.registerForm, isValid);\n      });\n    }\n  },\n  watch: {\n    email() {\n      this.touched.email = true;\n    },\n    password() {\n      this.touched.password = true;\n    },\n    confirmPassword() {\n      this.touched.confirmPass = true;\n    }\n  }\n};\n",{"version":3,"sources":["RegisterForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegisterForm.vue","sourceRoot":"src/pages/Dashboard/Forms/ValidationForms","sourcesContent":["<template>\n  <form>\n    <md-card>\n      <md-card-header class=\"md-card-header-icon md-card-header-green\">\n        <div class=\"card-icon\">\n          <md-icon>mail_outline</md-icon>\n        </div>\n        <h4 class=\"title\">Register Form</h4>\n      </md-card-header>\n\n      <md-card-content>\n        <md-field\n          :class=\"[\n            { 'md-valid': !errors.has('email') && touched.email },\n            { 'md-error': errors.has('email') }\n          ]\"\n        >\n          <label>Email Adress</label>\n          <md-input\n            v-model=\"email\"\n            data-vv-name=\"email\"\n            type=\"email\"\n            required\n            v-validate=\"modelValidations.email\"\n          >\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('email')\">close</md-icon>\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon\n              class=\"success\"\n              v-show=\"!errors.has('email') && touched.email\"\n              >done</md-icon\n            >\n          </slide-y-down-transition>\n        </md-field>\n        <md-field\n          :class=\"[\n            { 'md-valid': !errors.has('password') && touched.password },\n            { 'md-error': errors.has('password') }\n          ]\"\n        >\n          <label>Password</label>\n          <md-input\n            v-model=\"password\"\n            data-vv-name=\"password\"\n            type=\"password\"\n            ref=\"password\"\n            required\n            v-validate=\"modelValidations.password\"\n          >\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('password')\"\n              >close</md-icon\n            >\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon\n              class=\"success\"\n              v-show=\"!errors.has('password') && touched.password\"\n              >done</md-icon\n            >\n          </slide-y-down-transition>\n        </md-field>\n        <md-field\n          :class=\"[\n            {\n              'md-valid': !errors.has('confirmPassword') && touched.confirmPass\n            },\n            { 'md-error': errors.has('confirmPassword') }\n          ]\"\n        >\n          <label>Confirm Password</label>\n          <md-input\n            v-model=\"confirmPassword\"\n            data-vv-name=\"confirmPassword\"\n            data-vv-as=\"password\"\n            type=\"password\"\n            required\n            v-validate=\"modelValidations.confirmPassword\"\n          >\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('confirmPassword')\"\n              >close</md-icon\n            >\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon\n              class=\"success\"\n              v-show=\"!errors.has('confirmPassword') && touched.confirmPassword\"\n              >done</md-icon\n            >\n          </slide-y-down-transition>\n        </md-field>\n        <div class=\"form-category\">* Required fields</div>\n      </md-card-content>\n\n      <md-card-actions md-alignment=\"space-between\">\n        <md-checkbox v-model=\"boolean\">Subscribe to newsletter</md-checkbox>\n        <md-button\n          native-type=\"submit\"\n          @click.native.prevent=\"validate\"\n          class=\"md-success\"\n          >Register</md-button\n        >\n      </md-card-actions>\n    </md-card>\n  </form>\n</template>\n<script>\nimport { SlideYDownTransition } from \"vue2-transitions\";\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  data() {\n    return {\n      boolean: null,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      touched: {\n        email: false,\n        password: false,\n        confirmPass: false\n      },\n      modelValidations: {\n        email: {\n          required: true,\n          email: true\n        },\n        password: {\n          required: true,\n          min: 5\n        },\n        confirmPassword: {\n          required: true,\n          confirmed: \"password\"\n        }\n      }\n    };\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit(\"on-submit\", this.registerForm, isValid);\n      });\n    }\n  },\n  watch: {\n    email() {\n      this.touched.email = true;\n    },\n    password() {\n      this.touched.password = true;\n    },\n    confirmPassword() {\n      this.touched.confirmPass = true;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.md-card .md-card-actions {\n  border: none;\n}\n</style>\n"]}]}