{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/ValidationForms/TypeValidationForm.vue?vue&type=style&index=0&id=618841af&lang=scss&scoped=true&","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/ValidationForms/TypeValidationForm.vue","mtime":1557121779232},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.md-card .md-card-actions {\n  border: none;\n}\n\n.text-center {\n  justify-content: center !important;\n}\n",{"version":3,"sources":["TypeValidationForm.vue"],"names":[],"mappingsiBA;AACA;AACA;;AAEA;AACA;AACA","file":"TypeValidationForm.vue","sourceRoot":"src/pages/Dashboard/Forms/ValidationForms","sourcesContent":["<template>\n  <form>\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-size-66 mx-auto md-medium-size-100\">\n        \n        <tabs\n          :tab-name=\"['General Info', 'Target', 'Result']\"\n          :tab-icon=\"['info', 'location_on', 'gavel']\"\n          class=\"page-subcategories\"\n          nav-pills-icons\n          plain\n          color-button=\"warning\"\n        >\n          <!-- here you can add your content for tab-content -->\n          <template slot=\"tab-pane-1\">\n            <md-card>\n              <md-card-content>\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item\">\n                    <md-field>\n                      <label for=\"strategy\">Strategy</label>\n                      <md-select v-model=\"strategy\" name=\"strategy\" id=\"strategy\">\n                        <md-option value=\"fight-club\">Campaign and Collaborations</md-option>\n                        <md-option\n                          value=\"fight-club\"\n                        >Collaborate with Cash Management on CIB Customers</md-option>\n                        <md-option value=\"fight-club\">Focus on Middle and Upper Income</md-option>\n                        <md-option value=\"fight-club\">Focus on Manufacturing and Services</md-option>\n                        <md-option\n                          value=\"fight-club\"\n                        >Increase Gross Financing Balance for Business Banking</md-option>\n                        <md-option value=\"fight-club\">New Product Offering and Process Improvement</md-option>\n                        <md-option value=\"fight-club\">Support Fee Based Income</md-option>\n                      </md-select>\n                    </md-field>\n                  </div>\n                </div>\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item\">\n                    <md-field>\n                      <label for=\"sector\">Sector</label>\n                      <md-select v-model=\"sector\" name=\"sector\" id=\"sector\">\n                        <md-option value=\"fight-club\">Channel</md-option>\n                        <md-option value=\"fight-club\">Credit Card</md-option>\n                        <md-option value=\"fight-club\">Funding</md-option>\n                        <md-option value=\"fight-club\">Hire Purchase</md-option>\n                        <md-option value=\"fight-club\">Mortgage</md-option>\n                        <md-option value=\"fight-club\">Pawn Broking</md-option>\n                        <md-option value=\"fight-club\">Personal Finance</md-option>\n                        <md-option value=\"fight-club\">SME</md-option>\n                        <md-option value=\"fight-club\">Wealth Management</md-option>\n                      </md-select>\n                    </md-field>\n                  </div>\n                </div>\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item\">\n                    <md-field>\n                      <label for=\"name\">Initiative</label>\n                      <md-input v-model=\"name\" type=\"text\"></md-input>\n                    </md-field>\n                  </div>\n                </div>\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item\">\n                    <md-field>\n                      <label for=\"sector\">Status</label>\n                      <md-select v-model=\"status\" name=\"status\" id=\"status\">\n                        <md-option value=\"fight-club\">Not Started</md-option>\n                        <md-option value=\"fight-club\">Completed</md-option>\n                        <md-option value=\"fight-club\">Deferred</md-option>\n                      </md-select>\n                    </md-field>\n                  </div>\n                </div>\n              </md-card-content>\n            </md-card>\n          </template>\n          <template slot=\"tab-pane-2\">\n            <md-card>\n              <!-- <md-card-header class=\"md-card-header-icon md-card-header-green\">\n                <div class=\"card-icon\">\n                  <md-icon>assignment</md-icon>\n                </div>\n                <h4 class=\"title\">Initiatives</h4>\n              </md-card-header>-->\n              <md-card-content>\n                <md-button class=\"md-success\">Add New</md-button>\n                <md-table\n                  :value=\"queriedData\"\n                  :md-sort.sync=\"currentSort\"\n                  :md-sort-order.sync=\"currentSortOrder\"\n                  :md-sort-fn=\"customSort\"\n                  class=\"paginated-table table-striped table-hover\"\n                >\n                  <md-table-toolbar>\n                    <md-field>\n                      <label for=\"pages\">Per page</label>\n                      <md-select v-model=\"pagination.perPage\" name=\"pages\">\n                        <md-option\n                          v-for=\"item in pagination.perPageOptions\"\n                          :key=\"item\"\n                          :label=\"item\"\n                          :value=\"item\"\n                        >{{ item }}</md-option>\n                      </md-select>\n                    </md-field>\n\n                    <md-field>\n                      <md-input\n                        type=\"search\"\n                        class=\"mb-3\"\n                        clearable\n                        style=\"width: 200px\"\n                        placeholder=\"Search records\"\n                        v-model=\"searchQuery\"\n                      ></md-input>\n                    </md-field>\n                  </md-table-toolbar>\n\n                  <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                    <!-- <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{\n                item.name\n              }}</md-table-cell>\n              <md-table-cell md-label=\"Email\" md-sort-by=\"email\">{{\n                item.email\n              }}</md-table-cell>\n              <md-table-cell md-label=\"Age\">{{ item.age }}</md-table-cell>\n              <md-table-cell md-label=\"Salary\">{{ item.salary }}</md-table-cell>\n                    -->\n\n                    <md-table-cell md-label=\"Quarter\">{{ item.quarter }}</md-table-cell>\n                    <md-table-cell md-label=\"From\">{{ item.from }}</md-table-cell>\n                    <md-table-cell md-label=\"To\">{{ item.to }}</md-table-cell>\n                    <md-table-cell md-label=\"Target\">{{ item.target }}</md-table-cell>\n\n                    <md-table-cell md-label=\"Actions\">\n                      \n                      <md-button\n                        class=\"md-just-icon md-warning md-simple\"\n                        @click.native=\"handleEdit(item)\"\n                      >\n                        <md-icon>dvr</md-icon>\n                      </md-button>\n                      <md-button\n                        class=\"md-just-icon md-danger md-simple\"\n                        @click.native=\"handleDelete(item)\"\n                      >\n                        <md-icon>close</md-icon>\n                      </md-button>\n                    </md-table-cell>\n                  </md-table-row>\n                </md-table>\n                <!-- <div class=\"footer-table md-table\">\n                  <table>\n                    <tfoot>\n                      <tr>\n                        <th v-for=\"item in footerTable\" :key=\"item.name\" class=\"md-table-head\">\n                          <div class=\"md-table-head-container md-ripple md-disabled\">\n                            <div class=\"md-table-head-label\">{{ item }}</div>\n                          </div>\n                        </th>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div> -->\n              </md-card-content>\n              <md-card-actions md-alignment=\"space-between\">\n                <div class>\n                  <p class=\"card-category\">Showing {{ from + 1 }} to {{ to }} of {{ total }} entries</p>\n                </div>\n                <pagination\n                  class=\"pagination-no-border pagination-success\"\n                  v-model=\"pagination.currentPage\"\n                  :per-page=\"pagination.perPage\"\n                  :total=\"total\"\n                ></pagination>\n              </md-card-actions>\n            </md-card>\n          </template>\n          <template slot=\"tab-pane-3\">\n            <md-card>\n              <md-card-content>\n                <md-button class=\"md-success\">Add New</md-button>\n                <md-table\n                  :value=\"queriedResult\"\n                  :md-sort.sync=\"currentSort\"\n                  :md-sort-order.sync=\"currentSortOrder\"\n                  :md-sort-fn=\"customSort\"\n                  class=\"paginated-table table-striped table-hover\"\n                >\n                  <md-table-toolbar>\n                    <md-field>\n                      <label for=\"pages\">Per page</label>\n                      <md-select v-model=\"pagination.perPage\" name=\"pages\">\n                        <md-option\n                          v-for=\"item in pagination.perPageOptions\"\n                          :key=\"item\"\n                          :label=\"item\"\n                          :value=\"item\"\n                        >{{ item }}</md-option>\n                      </md-select>\n                    </md-field>\n\n                    <md-field>\n                      <md-input\n                        type=\"search\"\n                        class=\"mb-3\"\n                        clearable\n                        style=\"width: 200px\"\n                        placeholder=\"Search records\"\n                        v-model=\"searchQuery\"\n                      ></md-input>\n                    </md-field>\n                  </md-table-toolbar>\n\n                  <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                    <!-- <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{\n                item.name\n              }}</md-table-cell>\n              <md-table-cell md-label=\"Email\" md-sort-by=\"email\">{{\n                item.email\n              }}</md-table-cell>\n              <md-table-cell md-label=\"Age\">{{ item.age }}</md-table-cell>\n              <md-table-cell md-label=\"Salary\">{{ item.salary }}</md-table-cell>\n                    -->\n\n                    <md-table-cell md-label=\"From\">{{ item.from }}</md-table-cell>\n                    <md-table-cell md-label=\"To\">{{ item.to }}</md-table-cell>\n                    <md-table-cell md-label=\"Accumulated Actual\">{{ item.accumulatedActual }}</md-table-cell>\n                    <md-table-cell md-label=\"Status/Remark\">{{ item.status }}</md-table-cell>\n\n                    <md-table-cell md-label=\"Actions\">\n                      \n                      <md-button\n                        class=\"md-just-icon md-warning md-simple\"\n                        @click.native=\"handleEditResult(item)\"\n                      >\n                        <md-icon>dvr</md-icon>\n                      </md-button>\n                      <md-button\n                        class=\"md-just-icon md-danger md-simple\"\n                        @click.native=\"handleDeleteResult(item)\"\n                      >\n                        <md-icon>close</md-icon>\n                      </md-button>\n                    </md-table-cell>\n                  </md-table-row>\n                </md-table>\n                <!-- <div class=\"footer-table md-table\">\n                  <table>\n                    <tfoot>\n                      <tr>\n                        <th v-for=\"item in footerTable\" :key=\"item.name\" class=\"md-table-head\">\n                          <div class=\"md-table-head-container md-ripple md-disabled\">\n                            <div class=\"md-table-head-label\">{{ item }}</div>\n                          </div>\n                        </th>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div> -->\n              </md-card-content>\n              <md-card-actions md-alignment=\"space-between\">\n                <div class>\n                  <p class=\"card-category\">Showing {{ from + 1 }} to {{ to }} of {{ total }} entries</p>\n                </div>\n                <pagination\n                  class=\"pagination-no-border pagination-success\"\n                  v-model=\"pagination.currentPage\"\n                  :per-page=\"pagination.perPage\"\n                  :total=\"total\"\n                ></pagination>\n              </md-card-actions>\n            </md-card>\n          </template>\n        </tabs>\n      </div>\n    </div>\n  </form>\n</template>\n<script>\nimport { SlideYDownTransition } from \"vue2-transitions\";\nimport { Tabs } from \"@/components\";\nimport { Collapse } from \"@/components\";\nimport { Pagination } from \"@/components\";\n// import users from \"./users\";\n//import initiatives from \"./initiatives\";\nimport targets from \"./targets\";\nimport results from \"./results\";\nimport Fuse from \"fuse.js\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  components: {\n    Tabs,\n    SlideYDownTransition\n  },\n  computed: {\n    /***\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n     */\n    queriedData() {\n      let result = this.tableData;\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n      return result.slice(this.from, this.to);\n    },\n    queriedResult() {\n      let result = this.resultData;\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      return this.searchedData.length > 0\n        ? this.searchedData.length\n        : this.tableData.length;\n    },\n    toResult() {\n      let highBound = this.fromResult + this.pagination.perPage;\n      if (this.totalResult < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    fromResult() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    totalResult() {\n      return this.searchedData.length > 0\n        ? this.searchedData.length\n        : this.resultData.length;\n    }\n  },\n  data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: [\n        \"Quarter\",\n        \"From\",\n        \"To\",\n        \"Target\",\n        \"Actions\"\n      ],\n      searchQuery: \"\",\n      propsToSearch: [\"quarter\", \"from\", \"to\", \"target\"],\n      tableData: targets,\n      resultData: results,\n      searchedData: [],\n      fuseSearch: null,\n\n      equalToSource: \"\",\n      equalToDest: \"\",\n      required: \"\",\n      email: \"\",\n      number: \"\",\n      url: \"\",\n      touched: {\n        required: false,\n        email: false,\n        number: false,\n        url: false,\n        equalToSource: false,\n        equalToDest: false\n      },\n      modelValidations: {\n        required: {\n          required: true\n        },\n        email: {\n          required: true,\n          email: true\n        },\n        number: {\n          required: true,\n          numeric: true\n        },\n        url: {\n          required: true,\n          url: true\n        },\n        equalToSource: {\n          required: true\n        },\n        equalToDest: {\n          required: true,\n          confirmed: \"equalToSource\"\n        }\n      }\n    };\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit(\"on-submit\", this.registerForm, isValid);\n      });\n    },\n    customSort(value) {\n      return value.sort((a, b) => {\n        const sortBy = this.currentSort;\n        if (this.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    handleLike(item) {\n      Swal.fire({\n        title: `You liked ${item.name}`,\n        buttonsStyling: false,\n        type: \"success\",\n        confirmButtonClass: \"md-button md-success\"\n      });\n    },\n    handleEdit(item) {\n      Swal.fire({\n        title: `You want to edit ${item.quarter}`,\n        buttonsStyling: false,\n        confirmButtonClass: \"md-button md-info\"\n      });\n      //this.$router.push(\"/forms/validation\");\n    },\n    handleDelete(item) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: `You won't be able to revert this!`,\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(result => {\n        if (result.value) {\n          this.deleteRow(item);\n          Swal.fire({\n            title: \"Deleted!\",\n            text: `You deleted ${item.name}`,\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteRow(item) {\n      let indexToDelete = this.tableData.findIndex(\n        tableRow => tableRow.id === item.id\n      );\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },\n    handleEditResult(item) {\n      Swal.fire({\n        title: `You want to edit ${item.accumulatedActual}`,\n        buttonsStyling: false,\n        confirmButtonClass: \"md-button md-info\"\n      });\n      //this.$router.push(\"/forms/validation\");\n    },\n    handleDeleteResult(item) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: `You won't be able to revert this!`,\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(result => {\n        if (result.value) {\n          this.deleteResult(item);\n          Swal.fire({\n            title: \"Deleted!\",\n            text: `You deleted ${item.name}`,\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteResult(item) {\n      let indexToDelete = this.resultData.findIndex(\n        tableRow => tableRow.id === item.id\n      );\n      if (indexToDelete >= 0) {\n        this.resultData.splice(indexToDelete, 1);\n      }\n    },\n  },\n  mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.tableData, {\n      keys: [\"quarter\", \"target\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    required() {\n      this.touched.required = true;\n    },\n    email() {\n      this.touched.email = true;\n    },\n    number() {\n      this.touched.number = true;\n    },\n    url() {\n      this.touched.url = true;\n    },\n    equalToSource() {\n      this.touched.equalToSource = true;\n    },\n    equalToDest() {\n      this.touched.equalToDest = true;\n    },\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery(value) {\n      let result = this.tableData;\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n      this.searchedData = result;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.md-card .md-card-actions {\n  border: none;\n}\n\n.text-center {\n  justify-content: center !important;\n}\n</style>\n"]}]}