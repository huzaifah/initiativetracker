{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/components/WorldMap/AsyncWorldMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/components/WorldMap/AsyncWorldMap.vue","mtime":1549899732000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\n/*  We lazy load (async) the VectorMaps component because it contains 2 big libraries (jquery and jquery vector maps)\n      If the component is not loaded within 200ms, we display a loading component in the meanwhile.\n      This way, we don't bloat the main bundle with 2 unnecessary libs that we only need for this page :)\n   */\n\nconst WorldMap = () => ({\n  component: import(\"./WorldMap.vue\"),\n\n  delay: 200\n});\nexport default {\n  components: {\n    WorldMap\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  }\n};\n",{"version":3,"sources":["AsyncWorldMap.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AsyncWorldMap.vue","sourceRoot":"src/components/WorldMap","sourcesContent":["<template>\n  <world-map :data=\"data\"></world-map>\n</template>\n<script>\n/*  We lazy load (async) the VectorMaps component because it contains 2 big libraries (jquery and jquery vector maps)\n      If the component is not loaded within 200ms, we display a loading component in the meanwhile.\n      This way, we don't bloat the main bundle with 2 unnecessary libs that we only need for this page :)\n   */\n\nconst WorldMap = () => ({\n  component: import(\"./WorldMap.vue\"),\n\n  delay: 200\n});\nexport default {\n  components: {\n    WorldMap\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}