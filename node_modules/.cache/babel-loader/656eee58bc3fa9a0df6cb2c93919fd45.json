{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Reports.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Reports.vue","mtime":1559288244457},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JqxBarGauge from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxbargauge.vue\";\nimport JqxGrid from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxgrid\";\nimport JqxButton from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons\";\nimport { mapState, mapMutations, mapActions } from \"vuex\";\nexport default {\n  components: {\n    //JqxBarGauge,\n    JqxGrid: JqxGrid,\n    JqxButton: JqxButton\n  },\n  computed: _objectSpread({}, mapState({\n    tableData: function tableData(state) {\n      return state.store.lines;\n    }\n  })),\n  data: function data() {\n    return {\n      //values: [10, 20, 30, 40, 50],\n      getWidth: \"100%\",\n      dataAdapter: new jqx.dataAdapter(this.source),\n      columns: [{\n        text: \"Year\",\n        datafield: \"year\",\n        width: \"10%\"\n      }, {\n        text: \"Strategy\",\n        datafield: \"strategy\",\n        width: \"30%\"\n      }, {\n        text: \"Sector\",\n        datafield: \"sector\",\n        width: \"30%\"\n      }, {\n        text: \"Status\",\n        datafield: \"status\",\n        width: \"30%\"\n      }]\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    // Add here any data where you want to transform before components be rendered\n    this.source = {\n      datatype: \"array\",\n      datafields: [{\n        name: \"year\",\n        type: \"string\"\n      }, {\n        name: \"strategy\",\n        type: \"string\"\n      }, {\n        name: \"sector\",\n        type: \"string\"\n      }, {\n        name: \"status\",\n        type: \"string\"\n      }],\n      id: \"id\"\n    };\n  },\n  created: function created() {\n    this.source.localdata = this.tableData; //this.$refs.grid.updatebounddata();\n  },\n  methods: {\n    formatFunction: function formatFunction(value, index, color) {\n      return color;\n    },\n    onPageChanged: function onPageChanged() {\n      var info = this.$refs.grid.getpagingininformation();\n      alert(info);\n    },\n    excelBtnOnClick: function excelBtnOnClick() {\n      this.$refs.grid.exportdata(\"xls\", \"initiative-list\");\n    },\n    clearFiltering: function clearFiltering() {\n      this.$refs.grid.clearfilters();\n    }\n  }\n};",{"version":3,"sources":["Reports.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,WAAA,MAAA,qDAAA;AACA,OAAA,OAAA,MAAA,6CAAA;AACA,OAAA,SAAA,MAAA,gDAAA;AAEA,SAAA,QAAA,EAAA,YAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA;AACA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,SAAA,EAAA,mBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AAAA;AADA,GAAA,CADA,CANA;AAWA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA;AACA,MAAA,QAAA,EAAA,MAFA;AAGA,MAAA,WAAA,EAAA,IAAA,GAAA,CAAA,WAAA,CAAA,KAAA,MAAA,CAHA;AAIA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,SAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,UAAA;AAAA,QAAA,SAAA,EAAA,UAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,SAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,SAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA;AAJA,KAAA;AAWA,GAvBA;AAwBA,EAAA,YAAA,EAAA,wBAAA;AACA;AACA,SAAA,MAAA,GAAA;AACA,MAAA,QAAA,EAAA,OADA;AAEA,MAAA,UAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,UAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA,CAFA;AAQA,MAAA,EAAA,EAAA;AARA,KAAA;AAUA,GApCA;AAqCA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,MAAA,CAAA,SAAA,GAAA,KAAA,SAAA,CADA,CAEA;AACA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA,wBAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA,aAAA,KAAA;AACA,KAHA;AAIA,IAAA,aAAA,EAAA,yBAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA;AACA,KAPA;AAQA,IAAA,eAAA,EAAA,2BAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,KAAA,EAAA,iBAAA;AACA,KAVA;AAWA,IAAA,cAAA,EAAA,0BAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,YAAA;AACA;AAbA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"md-layout\">\n    <div class=\"md-layout-item\">\n      <md-card>\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\n          <div class=\"card-icon\">\n            <md-icon>assignment</md-icon>\n          </div>\n          <h4 class=\"title\">Report - Initiative</h4>\n        </md-card-header>\n        <md-card-content>\n          <JqxGrid\n            ref=\"grid\"\n            :width=\"getWidth\"\n            :source=\"dataAdapter\"\n            :columns=\"columns\"\n            :columnsresize=\"true\"\n            :pageable=\"true\"\n            :groupable=\"true\"\n            :sortable=\"true\"\n            :filterable=\"true\"\n            :altrows=\"true\"\n            :autoshowfiltericon=\"true\"\n            :filtermode=\"'excel'\"\n            :groups=\"['year']\"\n          ></JqxGrid>\n        </md-card-content>\n        <md-card-actions md-alignment=\"left\">\n          <JqxButton @click=\"excelBtnOnClick()\">Export to Excel</JqxButton>\n          <JqxButton @click=\"clearFiltering()\">Remove Filter</JqxButton>\n        </md-card-actions>\n      </md-card>\n    </div>\n  </div>\n</template>\n<script>\nimport JqxBarGauge from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxbargauge.vue\";\nimport JqxGrid from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxgrid\";\nimport JqxButton from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons\";\n\nimport { mapState, mapMutations, mapActions } from \"vuex\";\n\nexport default {\n  components: {\n    //JqxBarGauge,\n    JqxGrid,\n    JqxButton\n  },\n  computed: {\n    ...mapState({\n      tableData: state => state.store.lines\n    })\n  },\n  data: function() {\n    return {\n      //values: [10, 20, 30, 40, 50],\n      getWidth: \"100%\",\n      dataAdapter: new jqx.dataAdapter(this.source),\n      columns: [\n        { text: \"Year\", datafield: \"year\", width: \"10%\" },\n        { text: \"Strategy\", datafield: \"strategy\", width: \"30%\" },\n        { text: \"Sector\", datafield: \"sector\", width: \"30%\" },\n        { text: \"Status\", datafield: \"status\", width: \"30%\" }\n      ]\n    };\n  },\n  beforeCreate: function() {\n    // Add here any data where you want to transform before components be rendered\n    this.source = {\n      datatype: \"array\",\n      datafields: [\n        { name: \"year\", type: \"string\" },\n        { name: \"strategy\", type: \"string\" },\n        { name: \"sector\", type: \"string\" },\n        { name: \"status\", type: \"string\" }\n      ],\n      id: \"id\"\n    };\n  },\n  created: function() {\n    this.source.localdata = this.tableData;\n    //this.$refs.grid.updatebounddata();\n  },\n  methods: {\n    formatFunction: function(value, index, color) {\n      return color;\n    },\n    onPageChanged: function() {\n      let info = this.$refs.grid.getpagingininformation();\n      alert(info);\n    },\n    excelBtnOnClick: function() {\n      this.$refs.grid.exportdata(\"xls\", \"initiative-list\");\n    },\n    clearFiltering: function() {\n      this.$refs.grid.clearfilters();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.md-card .md-card-actions {\n  border: none;\n}\n\n.md-inline-checkboxes {\n  display: inline-flex;\n\n  .md-checkbox {\n    margin-top: 15px !important;\n  }\n}\n\n.md-checkbox,\n.md-radio {\n  margin-top: 15px;\n  margin-bottom: 0.5rem;\n}\n\n.md-checkbox,\n.md-radio {\n  display: flex;\n}\n\n.md-radio /deep/ .md-radio-container {\n  margin-left: 5px;\n  position: relative;\n  left: -3px;\n}\n\n.md-form-label + .md-layout-item .md-checkbox:not(:first-child),\n.md-form-label + .md-layout-item + .md-layout-item .md-radio:not(:first-child),\n.md-form-label + .md-layout-item .md-radio {\n  margin-top: 0;\n}\n\n.form-control-static {\n  margin-top: 6px;\n}\n</style>\n"],"sourceRoot":"src/pages/Dashboard/Forms"}]}