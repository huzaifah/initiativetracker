{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Wizard/ThirdStep.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Wizard/ThirdStep.vue","mtime":1558657244929},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.sort\";\nimport _objectSpread from \"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import { IconCheckbox } from \"@/components\";\nimport { Pagination } from \"@/components\"; //import results from \"./results\";\n\nimport Fuse from \"fuse.js\";\nimport Swal from \"sweetalert2\";\nimport moment from \"moment\";\nimport { mapMutations, mapState } from \"vuex\";\nexport default {\n  components: {\n    //IconCheckbox\n    Pagination: Pagination\n  },\n  props: {\n    record: {\n      default: null\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    if (this.record != null) {\n      var index = this.lines.findIndex(function (line) {\n        return line.id == _this.record.id;\n      });\n      if (index > -1) this.resultData = this.lines[index].result;else this.resultData = [];\n      if (this.resultData.length > 0) this.itemCount = this.resultData[this.resultData.length - 1].id;else this.itemCount = 0;\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    lines: function lines(state) {\n      return state.store.lines;\n    }\n  }), {\n    queriedResult: function queriedResult() {\n      var result = this.resultData;\n\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      return this.searchedData.length > 0 ? this.searchedData.length : this.resultData.length;\n    }\n  }),\n  data: function data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: [\"Quarter\", \"From\", \"To\", \"Target\", \"Actions\"],\n      searchQuery: \"\",\n      propsToSearch: [\"from\", \"to\", \"accumulatedActual\"],\n      resultData: [],\n      searchedData: [],\n      fuseSearch: null,\n      showDialog: false,\n      fromModal: null,\n      toModal: null,\n      accumulatedActual: null,\n      status: null,\n      itemId: null,\n      payload: null,\n      itemCount: null\n    };\n  },\n  methods: _objectSpread({}, mapMutations({\n    addInitiativeResult: \"store/addInitiativeResult\",\n    removeInitiativeResult: \"store/removeInitiativeResult\"\n  }), {\n    displayAddNew: function displayAddNew() {\n      this.fromModal = moment().format(\"YYYY/MM/DD\");\n      this.toModal = moment().format(\"YYYY/MM/DD\");\n      this.accumulatedActual = \"\";\n      this.status = \"\";\n      this.itemId = null;\n      this.showDialog = true;\n    },\n    validate: function validate() {\n      this.$emit(\"on-validated\", true, this.model);\n      return Promise.resolve(true);\n    },\n    modalClick: function modalClick() {\n      var _this2 = this;\n\n      this.showDialog = false;\n      this.payload = {\n        initiativeId: this.record.id,\n        from: moment(this.fromModal).format(\"D MMM YYYY\"),\n        to: moment(this.toModal).format(\"D MMM YYYY\"),\n        accumulatedActual: this.accumulatedActual,\n        status: this.status\n      };\n\n      if (this.itemId == null) {\n        this.itemId = this.itemCount + 1;\n      }\n\n      this.payload.id = this.itemId;\n      this.addInitiativeResult(this.payload);\n      this.itemCount = this.payload.id;\n      var index = this.lines.findIndex(function (line) {\n        return line.id == _this2.record.id;\n      });\n      this.resultData = this.lines[index].result; // if (this.itemId == null) {\n      //   this.resultData.push({\n      //     id: this.resultData.length + 1,\n      //     from: moment(this.fromModal).format(\"D MMM YYYY\"),\n      //     to: moment(this.toModal).format(\"D MMM YYYY\"),\n      //     accumulatedActual: this.accumulatedActual,\n      //     status: this.status\n      //   });\n      // } else {\n      //   let indexToUpdate = this.resultData.findIndex(\n      //     tableRow => tableRow.id === this.itemId\n      //   );\n      //   if (indexToUpdate >= 0) {\n      //     this.resultData.splice(indexToUpdate, 1);\n      //   }\n      //   this.resultData.push({\n      //     id: this.itemId,\n      //     from: moment(this.fromModal).format(\"D MMM YYYY\"),\n      //     to: moment(this.toModal).format(\"D MMM YYYY\"),\n      //     accumulatedActual: this.accumulatedActual,\n      //     status: this.status\n      //   });\n      // }\n\n      this.$emit(\"on-save\");\n    },\n    customSort: function customSort(value) {\n      var _this3 = this;\n\n      return value.sort(function (a, b) {\n        var sortBy = _this3.currentSort;\n\n        if (_this3.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    handleEditResult: function handleEditResult(item) {\n      this.fromModal = moment(item.from, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.toModal = moment(item.to, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.accumulatedActual = item.accumulatedActual;\n      this.status = item.status;\n      this.itemId = item.id;\n      this.showDialog = true;\n    },\n    handleDeleteResult: function handleDeleteResult(item) {\n      var _this4 = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(function (result) {\n        if (result.value) {\n          _this4.deleteResult(item);\n\n          Swal.fire({\n            title: \"Deleted!\",\n            text: \"You deleted \".concat(item.accumulatedActual),\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteResult: function deleteResult(item) {\n      // let indexToDelete = this.resultData.findIndex(\n      //   tableRow => tableRow.id === item.id\n      // );\n      // if (indexToDelete >= 0) {\n      //   this.resultData.splice(indexToDelete, 1);\n      // }\n      var indexToDelete = this.resultData.findIndex(function (tableRow) {\n        return tableRow.id === item.id;\n      });\n\n      if (indexToDelete >= 0) {\n        this.payload = this.resultData[indexToDelete];\n        this.payload.initiativeId = this.record.id;\n        this.removeInitiativeResult(this.payload);\n      }\n\n      this.$emit(\"on-save\");\n    }\n  }),\n  mounted: function mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.resultData, {\n      keys: [\"quarter\", \"accumulatedActual\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery: function searchQuery(value) {\n      var result = this.resultData;\n\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n\n      this.searchedData = result;\n    }\n  }\n};",{"version":3,"sources":["ThirdStep.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA,SAAA,UAAA,QAAA,cAAA,C,CACA;;AACA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,YAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA;AACA,IAAA,UAAA,EAAA;AAFA,GADA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA;AADA,GALA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,QAAA,KAAA,MAAA,IAAA,IAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,IAAA,KAAA,CAAA,MAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AAEA,UAAA,KAAA,GAAA,CAAA,CAAA,EACA,KAAA,UAAA,GAAA,KAAA,KAAA,CAAA,KAAA,EAAA,MAAA,CADA,KAGA,KAAA,UAAA,GAAA,EAAA;AAEA,UAAA,KAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EACA,KAAA,SAAA,GAAA,KAAA,UAAA,CAAA,KAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAAA,EAAA,CADA,KAGA,KAAA,SAAA,GAAA,CAAA;AACA;AACA,GAxBA;AAyBA,EAAA,QAAA,oBAIA,QAAA,CAAA;AACA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AAAA;AADA,GAAA,CAJA;AAOA,IAAA,aAPA,2BAOA;AACA,UAAA,MAAA,GAAA,KAAA,UAAA;;AACA,UAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,MAAA,GAAA,KAAA,YAAA;AACA;;AACA,aAAA,MAAA,CAAA,KAAA,CAAA,KAAA,IAAA,EAAA,KAAA,EAAA,CAAA;AACA,KAbA;AAcA,IAAA,EAdA,gBAcA;AACA,UAAA,SAAA,GAAA,KAAA,IAAA,GAAA,KAAA,UAAA,CAAA,OAAA;;AACA,UAAA,KAAA,KAAA,GAAA,SAAA,EAAA;AACA,QAAA,SAAA,GAAA,KAAA,KAAA;AACA;;AACA,aAAA,SAAA;AACA,KApBA;AAqBA,IAAA,IArBA,kBAqBA;AACA,aAAA,KAAA,UAAA,CAAA,OAAA,IAAA,KAAA,UAAA,CAAA,WAAA,GAAA,CAAA,CAAA;AACA,KAvBA;AAwBA,IAAA,KAxBA,mBAwBA;AACA,aAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,GACA,KAAA,YAAA,CAAA,MADA,GAEA,KAAA,UAAA,CAAA,MAFA;AAGA;AA5BA,IAzBA;AAuDA,EAAA,IAvDA,kBAuDA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,MADA;AAEA,MAAA,gBAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA;AACA,QAAA,OAAA,EAAA,CADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,cAAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAHA;AASA,MAAA,WAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,SAAA,CATA;AAUA,MAAA,WAAA,EAAA,EAVA;AAWA,MAAA,aAAA,EAAA,CAAA,MAAA,EAAA,IAAA,EAAA,mBAAA,CAXA;AAYA,MAAA,UAAA,EAAA,EAZA;AAaA,MAAA,YAAA,EAAA,EAbA;AAcA,MAAA,UAAA,EAAA,IAdA;AAeA,MAAA,UAAA,EAAA,KAfA;AAgBA,MAAA,SAAA,EAAA,IAhBA;AAiBA,MAAA,OAAA,EAAA,IAjBA;AAkBA,MAAA,iBAAA,EAAA,IAlBA;AAmBA,MAAA,MAAA,EAAA,IAnBA;AAoBA,MAAA,MAAA,EAAA,IApBA;AAqBA,MAAA,OAAA,EAAA,IArBA;AAsBA,MAAA,SAAA,EAAA;AAtBA,KAAA;AAwBA,GAhFA;AAiFA,EAAA,OAAA,oBACA,YAAA,CAAA;AACA,IAAA,mBAAA,EAAA,2BADA;AAEA,IAAA,sBAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,aALA,2BAKA;AACA,WAAA,SAAA,GAAA,MAAA,GAAA,MAAA,CAAA,YAAA,CAAA;AACA,WAAA,OAAA,GAAA,MAAA,GAAA,MAAA,CAAA,YAAA,CAAA;AACA,WAAA,iBAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KAZA;AAaA,IAAA,QAbA,sBAaA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,IAAA,EAAA,KAAA,KAAA;AAEA,aAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,KAjBA;AAkBA,IAAA,UAlBA,wBAkBA;AAAA;;AACA,WAAA,UAAA,GAAA,KAAA;AAEA,WAAA,OAAA,GAAA;AACA,QAAA,YAAA,EAAA,KAAA,MAAA,CAAA,EADA;AAEA,QAAA,IAAA,EAAA,MAAA,CAAA,KAAA,SAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAFA;AAGA,QAAA,EAAA,EAAA,MAAA,CAAA,KAAA,OAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAHA;AAIA,QAAA,iBAAA,EAAA,KAAA,iBAJA;AAKA,QAAA,MAAA,EAAA,KAAA;AALA,OAAA;;AAQA,UAAA,KAAA,MAAA,IAAA,IAAA,EAAA;AACA,aAAA,MAAA,GAAA,KAAA,SAAA,GAAA,CAAA;AACA;;AAEA,WAAA,OAAA,CAAA,EAAA,GAAA,KAAA,MAAA;AAEA,WAAA,mBAAA,CAAA,KAAA,OAAA;AACA,WAAA,SAAA,GAAA,KAAA,OAAA,CAAA,EAAA;AAEA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,IAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,WAAA,UAAA,GAAA,KAAA,KAAA,CAAA,KAAA,EAAA,MAAA,CArBA,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAA,KAAA,CAAA,SAAA;AACA,KApEA;AAqEA,IAAA,UArEA,sBAqEA,KArEA,EAqEA;AAAA;;AACA,aAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,WAAA;;AACA,YAAA,MAAA,CAAA,gBAAA,KAAA,MAAA,EAAA;AACA,iBAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA;AACA;;AACA,eAAA,CAAA,CAAA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA;AACA,OANA,CAAA;AAOA,KA7EA;AA8EA,IAAA,gBA9EA,4BA8EA,IA9EA,EA8EA;AACA,WAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA,WAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA,YAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA,WAAA,iBAAA,GAAA,IAAA,CAAA,iBAAA;AACA,WAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AACA,WAAA,MAAA,GAAA,IAAA,CAAA,EAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KArFA;AAsFA,IAAA,kBAtFA,8BAsFA,IAtFA,EAsFA;AAAA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,eADA;AAEA,QAAA,IAAA,qCAFA;AAGA,QAAA,IAAA,EAAA,SAHA;AAIA,QAAA,gBAAA,EAAA,IAJA;AAKA,QAAA,kBAAA,EAAA,+BALA;AAMA,QAAA,iBAAA,EAAA,8BANA;AAOA,QAAA,iBAAA,EAAA,iBAPA;AAQA,QAAA,cAAA,EAAA;AARA,OAAA,EASA,IATA,CASA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,IAAA;;AACA,UAAA,IAAA,CAAA,IAAA,CAAA;AACA,YAAA,KAAA,EAAA,UADA;AAEA,YAAA,IAAA,wBAAA,IAAA,CAAA,iBAAA,CAFA;AAGA,YAAA,IAAA,EAAA,SAHA;AAIA,YAAA,kBAAA,EAAA,+BAJA;AAKA,YAAA,cAAA,EAAA;AALA,WAAA;AAOA;AACA,OApBA;AAqBA,KA5GA;AA6GA,IAAA,YA7GA,wBA6GA,IA7GA,EA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAA,aAAA,GAAA,KAAA,UAAA,CAAA,SAAA,CACA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AAAA,OADA,CAAA;;AAIA,UAAA,aAAA,IAAA,CAAA,EAAA;AACA,aAAA,OAAA,GAAA,KAAA,UAAA,CAAA,aAAA,CAAA;AACA,aAAA,OAAA,CAAA,YAAA,GAAA,KAAA,MAAA,CAAA,EAAA;AAEA,aAAA,sBAAA,CAAA,KAAA,OAAA;AACA;;AACA,WAAA,KAAA,CAAA,SAAA;AACA;AAhIA,IAjFA;AAmNA,EAAA,OAnNA,qBAmNA;AACA;AACA,SAAA,UAAA,GAAA,IAAA,IAAA,CAAA,KAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,SAAA,EAAA,mBAAA,CADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA,CAAA;AAIA,GAzNA;AA0NA,EAAA,KAAA,EAAA;AACA;;;;;AAKA,IAAA,WANA,uBAMA,KANA,EAMA;AACA,UAAA,MAAA,GAAA,KAAA,UAAA;;AACA,UAAA,KAAA,KAAA,EAAA,EAAA;AACA,QAAA,MAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,KAAA,WAAA,CAAA;AACA;;AACA,WAAA,YAAA,GAAA,MAAA;AACA;AAZA;AA1NA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"md-layout\">\n      <md-button class=\"md-success\" @click=\"displayAddNew\">Add New</md-button>\n\n      <md-dialog :md-active.sync=\"showDialog\" style=\"width: 70%;\">\n        <md-dialog-title>Set Result</md-dialog-title>\n\n        <md-dialog-content>\n          <md-datepicker v-model=\"fromModal\" md-immediately>\n            <label>From date</label>\n          </md-datepicker>\n\n          <md-datepicker v-model=\"toModal\" md-immediately>\n            <label>To date</label>\n          </md-datepicker>\n\n          <md-field>\n            <label>Accumulated Actual</label>\n            <md-textarea v-model=\"accumulatedActual\"></md-textarea>\n          </md-field>\n\n          <md-field>\n            <label>Status</label>\n            <md-textarea v-model=\"status\"></md-textarea>\n          </md-field>\n        </md-dialog-content>\n\n        <md-dialog-actions>\n          <md-button class=\"md-danger\" @click=\"showDialog = false\">Close</md-button>\n          <md-button class=\"md-success\" @click=\"modalClick\">Save</md-button>\n        </md-dialog-actions>\n      </md-dialog>\n\n      <md-table\n        :value=\"queriedResult\"\n        :md-sort.sync=\"currentSort\"\n        :md-sort-order.sync=\"currentSortOrder\"\n        :md-sort-fn=\"customSort\"\n        class=\"paginated-table table-striped table-hover\"\n      >\n        <md-table-toolbar>\n          <md-field>\n            <label for=\"pages\">Per page</label>\n            <md-select v-model=\"pagination.perPage\" name=\"pages\">\n              <md-option\n                v-for=\"item in pagination.perPageOptions\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              >{{ item }}</md-option>\n            </md-select>\n          </md-field>\n\n          <md-field>\n            <md-input\n              type=\"search\"\n              class=\"mb-3\"\n              clearable\n              style=\"width: 200px\"\n              placeholder=\"Search records\"\n              v-model=\"searchQuery\"\n            ></md-input>\n          </md-field>\n        </md-table-toolbar>\n\n        <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n          <md-table-cell md-label=\"From\">{{ item.from }}</md-table-cell>\n          <md-table-cell md-label=\"To\">{{ item.to }}</md-table-cell>\n          <md-table-cell md-label=\"Accumulated Actual\">{{ item.accumulatedActual }}</md-table-cell>\n          <md-table-cell md-label=\"Status/Remark\">{{ item.status }}</md-table-cell>\n\n          <md-table-cell md-label=\"Actions\">\n            <md-button\n              class=\"md-just-icon md-warning md-simple\"\n              @click.native=\"handleEditResult(item)\"\n            >\n              <md-icon>dvr</md-icon>\n            </md-button>\n            <md-button\n              class=\"md-just-icon md-danger md-simple\"\n              @click.native=\"handleDeleteResult(item)\"\n            >\n              <md-icon>close</md-icon>\n            </md-button>\n          </md-table-cell>\n        </md-table-row>\n      </md-table>\n\n      <md-card-actions md-alignment=\"space-between\">\n        <div class>\n          <p class=\"card-category\">Showing {{ from + 1 }} to {{ to }} of {{ total }} entries</p>\n        </div>\n        <pagination\n          class=\"pagination-no-border pagination-success\"\n          v-model=\"pagination.currentPage\"\n          :per-page=\"pagination.perPage\"\n          :total=\"total\"\n        ></pagination>\n      </md-card-actions>\n\n    </div>\n  </div>\n</template>\n<script>\n//import { IconCheckbox } from \"@/components\";\nimport { Pagination } from \"@/components\";\n//import results from \"./results\";\nimport Fuse from \"fuse.js\";\nimport Swal from \"sweetalert2\";\nimport moment from \"moment\";\nimport { mapMutations, mapState } from \"vuex\";\n\nexport default {\n  components: {\n    //IconCheckbox\n    Pagination\n  },\n  props: {\n    record: {\n      default: null\n    }\n  },\n  created() {\n    if (this.record != null) {\n      let index = this.lines.findIndex(line => line.id == this.record.id);\n\n      if (index > -1)\n        this.resultData = this.lines[index].result;\n      else\n        this.resultData = [];\n\n      if (this.resultData.length > 0)\n        this.itemCount = this.resultData[this.resultData.length - 1].id;\n      else\n        this.itemCount = 0;\n    }\n  },\n  computed: {\n    /***\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n     */\n    ...mapState({\n      lines: state => state.store.lines\n    }),\n    queriedResult() {\n      let result = this.resultData;\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      return this.searchedData.length > 0\n        ? this.searchedData.length\n        : this.resultData.length;\n    }\n  },\n  data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: [\"Quarter\", \"From\", \"To\", \"Target\", \"Actions\"],\n      searchQuery: \"\",\n      propsToSearch: [\"from\", \"to\", \"accumulatedActual\"],\n      resultData: [],\n      searchedData: [],\n      fuseSearch: null,\n      showDialog: false,\n      fromModal: null,\n      toModal: null,\n      accumulatedActual: null,\n      status: null,\n      itemId: null,\n      payload: null,\n      itemCount: null\n    };\n  },\n  methods: {\n    ...mapMutations({\n      addInitiativeResult: \"store/addInitiativeResult\",\n      removeInitiativeResult: \"store/removeInitiativeResult\"\n    }),\n    displayAddNew() {\n      this.fromModal = moment().format(\"YYYY/MM/DD\");\n      this.toModal = moment().format(\"YYYY/MM/DD\");\n      this.accumulatedActual = \"\";\n      this.status = \"\";\n      this.itemId = null;\n      this.showDialog = true;\n    },\n    validate() {\n      this.$emit(\"on-validated\", true, this.model);\n\n      return Promise.resolve(true);\n    },\n    modalClick() {\n      this.showDialog = false;\n\n      this.payload = {\n        initiativeId: this.record.id,\n        from: moment(this.fromModal).format(\"D MMM YYYY\"),\n        to: moment(this.toModal).format(\"D MMM YYYY\"),\n        accumulatedActual: this.accumulatedActual,\n        status: this.status\n      };\n\n      if (this.itemId == null) {\n        this.itemId = this.itemCount + 1;\n      }\n      \n      this.payload.id = this.itemId;\n\n      this.addInitiativeResult(this.payload);\n      this.itemCount = this.payload.id;\n\n      let index = this.lines.findIndex(line => line.id == this.record.id);\n      this.resultData = this.lines[index].result;\n\n      // if (this.itemId == null) {\n      //   this.resultData.push({\n      //     id: this.resultData.length + 1,\n      //     from: moment(this.fromModal).format(\"D MMM YYYY\"),\n      //     to: moment(this.toModal).format(\"D MMM YYYY\"),\n      //     accumulatedActual: this.accumulatedActual,\n      //     status: this.status\n      //   });\n      // } else {\n      //   let indexToUpdate = this.resultData.findIndex(\n      //     tableRow => tableRow.id === this.itemId\n      //   );\n\n      //   if (indexToUpdate >= 0) {\n      //     this.resultData.splice(indexToUpdate, 1);\n      //   }\n\n      //   this.resultData.push({\n      //     id: this.itemId,\n      //     from: moment(this.fromModal).format(\"D MMM YYYY\"),\n      //     to: moment(this.toModal).format(\"D MMM YYYY\"),\n      //     accumulatedActual: this.accumulatedActual,\n      //     status: this.status\n      //   });\n      // }\n\n      this.$emit(\"on-save\");\n    },\n    customSort(value) {\n      return value.sort((a, b) => {\n        const sortBy = this.currentSort;\n        if (this.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    handleEditResult(item) {\n      this.fromModal = moment(item.from, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.toModal = moment(item.to, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.accumulatedActual = item.accumulatedActual;\n      this.status = item.status;\n      this.itemId = item.id;\n      this.showDialog = true;\n    },\n    handleDeleteResult(item) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: `You won't be able to revert this!`,\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(result => {\n        if (result.value) {\n          this.deleteResult(item);\n          Swal.fire({\n            title: \"Deleted!\",\n            text: `You deleted ${item.accumulatedActual}`,\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteResult(item) {\n      // let indexToDelete = this.resultData.findIndex(\n      //   tableRow => tableRow.id === item.id\n      // );\n      // if (indexToDelete >= 0) {\n      //   this.resultData.splice(indexToDelete, 1);\n      // }\n\n      let indexToDelete = this.resultData.findIndex(\n        tableRow => tableRow.id === item.id\n      );\n\n      if (indexToDelete >= 0) {\n        this.payload = this.resultData[indexToDelete];\n        this.payload.initiativeId = this.record.id;\n\n        this.removeInitiativeResult(this.payload);\n      }\n      this.$emit(\"on-save\");\n    }\n  },\n  mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.resultData, {\n      keys: [\"quarter\", \"accumulatedActual\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery(value) {\n      let result = this.resultData;\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n      this.searchedData = result;\n    }\n  }\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/pages/Dashboard/Forms/Wizard"}]}