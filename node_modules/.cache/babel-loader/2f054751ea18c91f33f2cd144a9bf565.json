{"remainingRequest":"/Users/huzaifah/Downloads/initiativetracker/node_modules/babel-loader/lib/index.js!/Users/huzaifah/Downloads/initiativetracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huzaifah/Downloads/initiativetracker/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/initiativetracker/src/pages/Dashboard/Forms/ValidationForms/RangeValidationForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huzaifah/Downloads/initiativetracker/src/pages/Dashboard/Forms/ValidationForms/RangeValidationForm.vue","mtime":1549899732000},{"path":"/Users/huzaifah/Downloads/initiativetracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/initiativetracker/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/initiativetracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/initiativetracker/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { SlideYDownTransition } from \"vue2-transitions\";\nexport default {\n  components: {\n    SlideYDownTransition: SlideYDownTransition\n  },\n  data: function data() {\n    return {\n      minLength: \"\",\n      maxLength: \"\",\n      range: \"\",\n      minValue: \"\",\n      maxValue: \"\",\n      touched: {\n        minLength: false,\n        maxLength: false,\n        range: false,\n        minValue: false,\n        maxValue: false\n      },\n      modelValidations: {\n        minLength: {\n          required: true,\n          min: 5\n        },\n        maxLength: {\n          required: true,\n          max: 5\n        },\n        range: {\n          required: true,\n          min: 6,\n          max: 10\n        },\n        minValue: {\n          required: true,\n          min_value: 6\n        },\n        maxValue: {\n          required: true,\n          max_value: 6\n        }\n      }\n    };\n  },\n  methods: {\n    validate: function validate() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (isValid) {\n        _this.$emit(\"on-submit\", _this.registerForm, isValid);\n      });\n    }\n  },\n  watch: {\n    minLength: function minLength() {\n      this.touched.minLength = true;\n    },\n    maxLength: function maxLength() {\n      this.touched.maxLength = true;\n    },\n    range: function range() {\n      this.touched.range = true;\n    },\n    minValue: function minValue() {\n      this.touched.minValue = true;\n    },\n    maxValue: function maxValue() {\n      this.touched.maxValue = true;\n    }\n  }\n};",{"version":3,"sources":["RangeValidationForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiNA,SAAA,oBAAA,QAAA,kBAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,oBAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,OAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,SAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA,KAHA;AAIA,QAAA,QAAA,EAAA,KAJA;AAKA,QAAA,QAAA,EAAA;AALA,OANA;AAaA,MAAA,gBAAA,EAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,GAAA,EAAA;AAFA,SADA;AAKA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,GAAA,EAAA;AAFA,SALA;AASA,QAAA,KAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,GAAA,EAAA,CAFA;AAGA,UAAA,GAAA,EAAA;AAHA,SATA;AAcA,QAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,SAAA,EAAA;AAFA,SAdA;AAkBA,QAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,SAAA,EAAA;AAFA;AAlBA;AAbA,KAAA;AAqCA,GA1CA;AA2CA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,WAAA,EAAA,KAAA,CAAA,YAAA,EAAA,OAAA;AACA,OAFA;AAGA;AALA,GA3CA;AAkDA,EAAA,KAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,OAAA,CAAA,SAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,WAAA,OAAA,CAAA,SAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,KAPA,mBAOA;AACA,WAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA,KATA;AAUA,IAAA,QAVA,sBAUA;AACA,WAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA,KAZA;AAaA,IAAA,QAbA,sBAaA;AACA,WAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA;AAfA;AAlDA,CAAA","sourcesContent":["<template>\n  <form>\n    <md-card>\n      <md-card-header class=\"md-card-header-text md-card-header-green\">\n        <div class=\"card-text\">\n          <h4 class=\"title\">Range Validation</h4>\n        </div>\n      </md-card-header>\n\n      <md-card-content>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Min Length\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-valid': !errors.has('minLength') && touched.minLength },\n                { 'md-error': errors.has('minLength') }\n              ]\"\n            >\n              <md-input\n                v-model=\"minLength\"\n                data-vv-name=\"minLength\"\n                type=\"text\"\n                required\n                v-validate=\"modelValidations.minLength\"\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('minLength')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('minLength') && touched.minLength\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>minLength=\"5\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Max Length\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-valid': !errors.has('maxLength') && touched.maxLength },\n                { 'md-error': errors.has('maxLength') }\n              ]\"\n            >\n              <md-input\n                v-model=\"maxLength\"\n                data-vv-name=\"maxLength\"\n                type=\"text\"\n                required\n                v-validate=\"modelValidations.maxLength\"\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('maxLength')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('maxLength') && touched.maxLength\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>maxLength=\"5\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Range\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-valid': !errors.has('range') && touched.range },\n                { 'md-error': errors.has('range') }\n              ]\"\n            >\n              <md-input\n                v-model=\"range\"\n                data-vv-name=\"range\"\n                type=\"text\"\n                required\n                v-validate=\"modelValidations.range\"\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('range')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('range') && touched.range\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>range=\"[6,10]\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Min Value\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-valid': !errors.has('minValue') && touched.minValue },\n                { 'md-error': errors.has('minValue') }\n              ]\"\n            >\n              <md-input\n                v-model=\"minValue\"\n                data-vv-name=\"minValue\"\n                type=\"text\"\n                required\n                v-validate=\"modelValidations.minValue\"\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('minValue')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('minValue') && touched.minValue\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>min=\"6\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Max Value\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-valid': !errors.has('maxValue') && touched.maxValue },\n                { 'md-error': errors.has('maxValue') }\n              ]\"\n            >\n              <md-input\n                v-model=\"maxValue\"\n                data-vv-name=\"maxValue\"\n                type=\"text\"\n                required\n                v-validate=\"modelValidations.maxValue\"\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('maxValue')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('maxValue') && touched.maxValue\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>max=\"6\"</code>\n          </label>\n        </div>\n      </md-card-content>\n\n      <md-card-actions class=\"text-center\">\n        <md-button\n          native-type=\"submit\"\n          @click.native.prevent=\"validate\"\n          class=\"md-success\"\n          >Validate Inputs</md-button\n        >\n      </md-card-actions>\n    </md-card>\n  </form>\n</template>\n<script>\nimport { SlideYDownTransition } from \"vue2-transitions\";\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  data() {\n    return {\n      minLength: \"\",\n      maxLength: \"\",\n      range: \"\",\n      minValue: \"\",\n      maxValue: \"\",\n      touched: {\n        minLength: false,\n        maxLength: false,\n        range: false,\n        minValue: false,\n        maxValue: false\n      },\n      modelValidations: {\n        minLength: {\n          required: true,\n          min: 5\n        },\n        maxLength: {\n          required: true,\n          max: 5\n        },\n        range: {\n          required: true,\n          min: 6,\n          max: 10\n        },\n        minValue: {\n          required: true,\n          min_value: 6\n        },\n        maxValue: {\n          required: true,\n          max_value: 6\n        }\n      }\n    };\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit(\"on-submit\", this.registerForm, isValid);\n      });\n    }\n  },\n  watch: {\n    minLength() {\n      this.touched.minLength = true;\n    },\n    maxLength() {\n      this.touched.maxLength = true;\n    },\n    range() {\n      this.touched.range = true;\n    },\n    minValue() {\n      this.touched.minValue = true;\n    },\n    maxValue() {\n      this.touched.maxValue = true;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.md-card .md-card-actions {\n  border: none;\n}\n\n.text-center {\n  justify-content: center !important;\n}\n</style>\n"],"sourceRoot":"src/pages/Dashboard/Forms/ValidationForms"}]}