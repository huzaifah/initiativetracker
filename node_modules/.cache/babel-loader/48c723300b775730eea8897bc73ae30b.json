{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/eslint-loader/index.js??ref--13-0!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/store/cart.js","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/store/cart.js","mtime":1557453001669},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport initiatives from \"./initiatives\";\nexport default {\n  namespaced: true,\n  state: {\n    lines: []\n  },\n  getters: {// itemCount: state => state.lines.reduce((total, line) =>\n    //     total + line.quantity, 0),\n    // totalPrice: state => state.lines.reduce((total, line) =>\n    // total + (line.quantity * line.product.price), 0)\n  },\n  mutations: {\n    addInitiative: function addInitiative(state, initiative) {\n      var line = state.lines.findIndex(function (line) {\n        return line.id == initiative.id;\n      });\n\n      if (line > -1) {\n        state.lines.splice(line, 1, initiative);\n      } else {\n        state.lines.push({\n          id: initiative.id,\n          year: initiative.year,\n          strategy: initiative.strategy,\n          sector: initiative.sector,\n          status: initiative.status,\n          name: initiative.name\n        });\n      }\n    },\n    removeInitiative: function removeInitiative(state, lineToRemove) {\n      var index = state.lines.findIndex(function (line) {\n        return line == lineToRemove;\n      });\n\n      if (index > -1) {\n        state.lines.splice(index, 1);\n      }\n    },\n    setInitiativeData: function setInitiativeData(state, data) {\n      state.lines = data;\n    }\n  },\n  actions: {\n    loadInitiativeData: function loadInitiativeData(context) {\n      var data = localStorage.getItem(\"initiative\");\n\n      if (data != null) {\n        context.commit(\"setInitiativeData\", JSON.parse(data));\n      }\n    },\n    storeInitiativeData: function storeInitiativeData(context) {\n      localStorage.setItem(\"initiative\", JSON.stringify(context.state.lines));\n    },\n    clearInitiativeData: function clearInitiativeData(context) {\n      context.commit(\"setInitiativeData\", []);\n    },\n    initializeInitiative: function initializeInitiative(context, store) {\n      context.dispatch(\"loadInitiativeData\");\n      store.watch(function (state) {\n        return state.lines;\n      }, function () {\n        return context.dispatch(\"storeInitiativeData\");\n      }, {\n        deep: true\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/store/cart.js"],"names":["initiatives","namespaced","state","lines","getters","mutations","addInitiative","initiative","line","findIndex","id","splice","push","year","strategy","sector","status","name","removeInitiative","lineToRemove","index","setInitiativeData","data","actions","loadInitiativeData","context","localStorage","getItem","commit","JSON","parse","storeInitiativeData","setItem","stringify","clearInitiativeData","initializeInitiative","store","dispatch","watch","deep"],"mappings":";;AAAA,OAAOA,WAAP;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GAFI;AAKXC,EAAAA,OAAO,EAAE,CACL;AACA;AACA;AACA;AAJK,GALE;AAWXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,aADO,yBACOJ,KADP,EACcK,UADd,EAC0B;AAC7B,UAAIC,IAAI,GAAGN,KAAK,CAACC,KAAN,CAAYM,SAAZ,CAAsB,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACE,EAAL,IAAWH,UAAU,CAACG,EAA1B;AAAA,OAA1B,CAAX;;AAEA,UAAIF,IAAI,GAAG,CAAC,CAAZ,EAAe;AACXN,QAAAA,KAAK,CAACC,KAAN,CAAYQ,MAAZ,CAAmBH,IAAnB,EAAyB,CAAzB,EAA4BD,UAA5B;AACH,OAFD,MAEO;AACHL,QAAAA,KAAK,CAACC,KAAN,CAAYS,IAAZ,CAAiB;AACbF,UAAAA,EAAE,EAAEH,UAAU,CAACG,EADF;AAEbG,UAAAA,IAAI,EAAEN,UAAU,CAACM,IAFJ;AAGbC,UAAAA,QAAQ,EAAEP,UAAU,CAACO,QAHR;AAIbC,UAAAA,MAAM,EAAER,UAAU,CAACQ,MAJN;AAKbC,UAAAA,MAAM,EAAET,UAAU,CAACS,MALN;AAMbC,UAAAA,IAAI,EAAEV,UAAU,CAACU;AANJ,SAAjB;AAQH;AACJ,KAhBM;AAiBPC,IAAAA,gBAjBO,4BAiBUhB,KAjBV,EAiBiBiB,YAjBjB,EAiB+B;AAClC,UAAIC,KAAK,GAAGlB,KAAK,CAACC,KAAN,CAAYM,SAAZ,CAAsB,UAAAD,IAAI;AAAA,eAAIA,IAAI,IAAIW,YAAZ;AAAA,OAA1B,CAAZ;;AACA,UAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZlB,QAAAA,KAAK,CAACC,KAAN,CAAYQ,MAAZ,CAAmBS,KAAnB,EAA0B,CAA1B;AACH;AACJ,KAtBM;AAuBPC,IAAAA,iBAvBO,6BAuBWnB,KAvBX,EAuBkBoB,IAvBlB,EAuBwB;AAC3BpB,MAAAA,KAAK,CAACC,KAAN,GAAcmB,IAAd;AACH;AAzBM,GAXA;AAsCXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,kBADK,8BACcC,OADd,EACuB;AACxB,UAAIH,IAAI,GAAGI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;;AAEA,UAAIL,IAAI,IAAI,IAAZ,EAAkB;AACdG,QAAAA,OAAO,CAACG,MAAR,CAAe,mBAAf,EAAoCC,IAAI,CAACC,KAAL,CAAWR,IAAX,CAApC;AACH;AAEJ,KARI;AASLS,IAAAA,mBATK,+BASeN,OATf,EASwB;AACzBC,MAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmCH,IAAI,CAACI,SAAL,CAAeR,OAAO,CAACvB,KAAR,CAAcC,KAA7B,CAAnC;AACH,KAXI;AAYL+B,IAAAA,mBAZK,+BAYeT,OAZf,EAYwB;AACzBA,MAAAA,OAAO,CAACG,MAAR,CAAe,mBAAf,EAAoC,EAApC;AACH,KAdI;AAeLO,IAAAA,oBAfK,gCAegBV,OAfhB,EAeyBW,KAfzB,EAegC;AACjCX,MAAAA,OAAO,CAACY,QAAR,CAAiB,oBAAjB;AACAD,MAAAA,KAAK,CAACE,KAAN,CAAY,UAAApC,KAAK;AAAA,eAAIA,KAAK,CAACC,KAAV;AAAA,OAAjB,EAAkC;AAAA,eAAMsB,OAAO,CAACY,QAAR,CAAiB,qBAAjB,CAAN;AAAA,OAAlC,EAAiF;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAjF;AACH;AAlBI;AAtCE,CAAf","sourcesContent":["import initiatives from \"./initiatives\";\n\nexport default {\n    namespaced: true,\n    state: {\n        lines: []\n    },\n    getters: {\n        // itemCount: state => state.lines.reduce((total, line) =>\n        //     total + line.quantity, 0),\n        // totalPrice: state => state.lines.reduce((total, line) =>\n        // total + (line.quantity * line.product.price), 0)\n    },\n    mutations: {\n        addInitiative(state, initiative) {\n            let line = state.lines.findIndex(line => line.id == initiative.id);\n            \n            if (line > -1) {\n                state.lines.splice(line, 1, initiative);\n            } else {\n                state.lines.push({\n                    id: initiative.id,\n                    year: initiative.year,\n                    strategy: initiative.strategy,\n                    sector: initiative.sector,\n                    status: initiative.status,\n                    name: initiative.name\n                });\n            }\n        },\n        removeInitiative(state, lineToRemove) {\n            let index = state.lines.findIndex(line => line == lineToRemove);\n            if (index > -1) {\n                state.lines.splice(index, 1);\n            }\n        },\n        setInitiativeData(state, data) {\n            state.lines = data;\n        }\n    },\n    actions: {\n        loadInitiativeData(context) {\n            let data = localStorage.getItem(\"initiative\");\n\n            if (data != null) {\n                context.commit(\"setInitiativeData\", JSON.parse(data));\n            }           \n            \n        },\n        storeInitiativeData(context) {\n            localStorage.setItem(\"initiative\", JSON.stringify(context.state.lines));\n        },\n        clearInitiativeData(context) {\n            context.commit(\"setInitiativeData\", []);\n        },\n        initializeInitiative(context, store) {\n            context.dispatch(\"loadInitiativeData\");\n            store.watch(state => state.lines, () => context.dispatch(\"storeInitiativeData\"), { deep: true });\n        }\n    }\n}"]}]}