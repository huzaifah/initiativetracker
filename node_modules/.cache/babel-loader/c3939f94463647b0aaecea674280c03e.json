{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/eslint-loader/index.js??ref--13-0!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/data/store.js","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/data/store.js","mtime":1557278860578},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nexport default {\n  namespaced: true,\n  state: {\n    initiatives: []\n  },\n  getters: {// itemCount: state => state.lines.reduce((total, line) =>\n    //     total + line.quantity, 0),\n    // totalPrice: state => state.lines.reduce((total, line) =>\n    // total + (line.quantity * line.product.price), 0)\n  },\n  mutations: {\n    addInitiative: function addInitiative(state, initiative) {\n      var line = state.initiatives.find(function (line) {\n        return line.initiative.id == initiative.id;\n      });\n\n      if (line != null) {// line.quantity++;\n      } else {\n        state.initiatives.push({\n          initiative: initiative\n        });\n      }\n    },\n    // changeQuantity(state, update) {\n    //     update.line.quantity = update.quantity;\n    // },\n    removeInitiative: function removeInitiative(state, lineToRemove) {\n      var index = state.initiatives.findIndex(function (line) {\n        return line == lineToRemove;\n      });\n\n      if (index > -1) {\n        state.initiatives.splice(index, 1);\n      }\n    },\n    setInitiativeData: function setInitiativeData(state, data) {\n      state.initiatives = data;\n    }\n  },\n  actions: {\n    loadInitiativeData: function loadInitiativeData(context) {\n      var data = localStorage.getItem(\"initiative\");\n\n      if (data != null) {\n        context.commit(\"setInitiativeData\", JSON.parse(data));\n      }\n    },\n    storeInitiativeData: function storeInitiativeData(context) {\n      localStorage.setItem(\"initiative\", JSON.stringify(context.state.initiatives));\n    },\n    clearInitiativeData: function clearInitiativeData(context) {\n      context.commit(\"setInitiativeData\", []);\n    },\n    initializeInitiative: function initializeInitiative(context, store) {\n      context.dispatch(\"loadInitiativeData\");\n      store.watch(function (state) {\n        return state.initiatives;\n      }, function () {\n        return context.dispatch(\"storeInitiativeData\");\n      }, {\n        deep: true\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/data/store.js"],"names":["namespaced","state","initiatives","getters","mutations","addInitiative","initiative","line","find","id","push","removeInitiative","lineToRemove","index","findIndex","splice","setInitiativeData","data","actions","loadInitiativeData","context","localStorage","getItem","commit","JSON","parse","storeInitiativeData","setItem","stringify","clearInitiativeData","initializeInitiative","store","dispatch","watch","deep"],"mappings":";;AAAA,eAAe;AACXA,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE;AADV,GAFI;AAKXC,EAAAA,OAAO,EAAE,CACL;AACA;AACA;AACA;AAJK,GALE;AAWXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,aADO,yBACOJ,KADP,EACcK,UADd,EAC0B;AAC7B,UAAIC,IAAI,GAAGN,KAAK,CAACC,WAAN,CAAkBM,IAAlB,CAAuB,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACD,UAAL,CAAgBG,EAAhB,IAAsBH,UAAU,CAACG,EAArC;AAAA,OAA3B,CAAX;;AACA,UAAIF,IAAI,IAAI,IAAZ,EAAkB,CACd;AACH,OAFD,MAEO;AACHN,QAAAA,KAAK,CAACC,WAAN,CAAkBQ,IAAlB,CAAuB;AACnBJ,UAAAA,UAAU,EAAVA;AADmB,SAAvB;AAGH;AACJ,KAVM;AAWP;AACA;AACA;AACAK,IAAAA,gBAdO,4BAcUV,KAdV,EAciBW,YAdjB,EAc+B;AAClC,UAAIC,KAAK,GAAGZ,KAAK,CAACC,WAAN,CAAkBY,SAAlB,CAA4B,UAAAP,IAAI;AAAA,eAAIA,IAAI,IAAIK,YAAZ;AAAA,OAAhC,CAAZ;;AACA,UAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZZ,QAAAA,KAAK,CAACC,WAAN,CAAkBa,MAAlB,CAAyBF,KAAzB,EAAgC,CAAhC;AACH;AACJ,KAnBM;AAoBPG,IAAAA,iBApBO,6BAoBWf,KApBX,EAoBkBgB,IApBlB,EAoBwB;AAC3BhB,MAAAA,KAAK,CAACC,WAAN,GAAoBe,IAApB;AACH;AAtBM,GAXA;AAmCXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,kBADK,8BACcC,OADd,EACuB;AACxB,UAAIH,IAAI,GAAGI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;;AACA,UAAIL,IAAI,IAAI,IAAZ,EAAkB;AACdG,QAAAA,OAAO,CAACG,MAAR,CAAe,mBAAf,EAAoCC,IAAI,CAACC,KAAL,CAAWR,IAAX,CAApC;AACH;AACJ,KANI;AAOLS,IAAAA,mBAPK,+BAOeN,OAPf,EAOwB;AACzBC,MAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmCH,IAAI,CAACI,SAAL,CAAeR,OAAO,CAACnB,KAAR,CAAcC,WAA7B,CAAnC;AACH,KATI;AAUL2B,IAAAA,mBAVK,+BAUeT,OAVf,EAUwB;AACzBA,MAAAA,OAAO,CAACG,MAAR,CAAe,mBAAf,EAAoC,EAApC;AACH,KAZI;AAaLO,IAAAA,oBAbK,gCAagBV,OAbhB,EAayBW,KAbzB,EAagC;AACjCX,MAAAA,OAAO,CAACY,QAAR,CAAiB,oBAAjB;AACAD,MAAAA,KAAK,CAACE,KAAN,CAAY,UAAAhC,KAAK;AAAA,eAAIA,KAAK,CAACC,WAAV;AAAA,OAAjB,EAAwC;AAAA,eAAMkB,OAAO,CAACY,QAAR,CAAiB,qBAAjB,CAAN;AAAA,OAAxC,EAAuF;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAvF;AACH;AAhBI;AAnCE,CAAf","sourcesContent":["export default {\n    namespaced: true,\n    state: {\n        initiatives: []\n    },\n    getters: {\n        // itemCount: state => state.lines.reduce((total, line) =>\n        //     total + line.quantity, 0),\n        // totalPrice: state => state.lines.reduce((total, line) =>\n        // total + (line.quantity * line.product.price), 0)\n    },\n    mutations: {\n        addInitiative(state, initiative) {\n            let line = state.initiatives.find(line => line.initiative.id == initiative.id);\n            if (line != null) {\n                // line.quantity++;\n            } else {\n                state.initiatives.push({\n                    initiative\n                });\n            }\n        },\n        // changeQuantity(state, update) {\n        //     update.line.quantity = update.quantity;\n        // },\n        removeInitiative(state, lineToRemove) {\n            let index = state.initiatives.findIndex(line => line == lineToRemove);\n            if (index > -1) {\n                state.initiatives.splice(index, 1);\n            }\n        },\n        setInitiativeData(state, data) {\n            state.initiatives = data;\n        }\n    },\n    actions: {\n        loadInitiativeData(context) {\n            let data = localStorage.getItem(\"initiative\");\n            if (data != null) {\n                context.commit(\"setInitiativeData\", JSON.parse(data));\n            }                \n        },\n        storeInitiativeData(context) {\n            localStorage.setItem(\"initiative\", JSON.stringify(context.state.initiatives));\n        },\n        clearInitiativeData(context) {\n            context.commit(\"setInitiativeData\", []);\n        },\n        initializeInitiative(context, store) {\n            context.dispatch(\"loadInitiativeData\");\n            store.watch(state => state.initiatives, () => context.dispatch(\"storeInitiativeData\"), { deep: true });\n        }\n    }\n}"]}]}