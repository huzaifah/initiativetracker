{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/thread-loader/dist/cjs.js!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/eslint-loader/index.js??ref--13-0!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/store/cart.js","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/store/cart.js","mtime":1558594740408},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport initiatives from \"./initiatives\";\nexport default {\n  namespaced: true,\n  state: {\n    lines: []\n  },\n  getters: {// itemCount: state => state.lines.reduce((total, line) =>\n    //     total + line.quantity, 0),\n    // totalPrice: state => state.lines.reduce((total, line) =>\n    // total + (line.quantity * line.product.price), 0)\n  },\n  mutations: {\n    addInitiative: function addInitiative(state, initiative) {\n      var line = state.lines.findIndex(function (line) {\n        return line.id == initiative.id;\n      });\n\n      if (line > -1) {\n        var item = state.lines[line];\n        item.year = initiative.year;\n        item.strategy = initiative.strategy;\n        item.sector = initiative.sector;\n        item.status = initiative.status;\n        item.name = initiative.name;\n      } else {\n        state.lines.push({\n          id: initiative.id,\n          year: initiative.year,\n          strategy: initiative.strategy,\n          sector: initiative.sector,\n          status: initiative.status,\n          name: initiative.name,\n          target: [],\n          result: []\n        });\n      }\n    },\n    addInitiativeTarget: function addInitiativeTarget(state, target) {\n      var initiativeIndex = state.lines.findIndex(function (line) {\n        return line.id == target.initiativeId;\n      });\n      var targetId = state.lines[initiativeIndex].target.findIndex(function (line) {\n        return line.id == target.id;\n      });\n\n      if (targetId == -1) {\n        state.lines[initiativeIndex].target.push({\n          id: target.id,\n          quarterYear: target.quarterYear,\n          quarter: target.quarter,\n          year: target.year,\n          from: target.from,\n          to: target.to,\n          target: target.target\n        });\n      } else {\n        var indexToUpdate = state.lines[initiativeIndex].target.findIndex(function (tableRow) {\n          return tableRow.id === target.id;\n        });\n\n        if (indexToUpdate >= 0) {\n          state.lines[initiativeIndex].target.splice(indexToUpdate, 1);\n        }\n\n        state.lines[initiativeIndex].target.push({\n          id: target.id,\n          quarterYear: target.quarterYear,\n          quarter: target.quarter,\n          year: target.year,\n          from: target.from,\n          to: target.to,\n          target: target.target\n        });\n      }\n    },\n    removeInitiativeTarget: function removeInitiativeTarget(state, target) {\n      var initiativeIndex = state.lines.findIndex(function (line) {\n        return line.id == target.initiativeId;\n      });\n      var indexToDelete = state.lines[initiativeIndex].target.findIndex(function (line) {\n        return line.id == target.id;\n      });\n\n      if (indexToDelete >= 0) {\n        state.lines[initiativeIndex].target.splice(indexToDelete, 1);\n      }\n    },\n    addInitiativeResult: function addInitiativeResult(state, result) {\n      var initiativeIndex = state.lines.findIndex(function (line) {\n        return line.id == result.initiativeId;\n      });\n      var resultId = state.lines[initiativeIndex].result.findIndex(function (line) {\n        return line.id == result.id;\n      });\n\n      if (resultId == -1) {\n        state.lines[initiativeIndex].result.push({\n          id: result.id,\n          from: result.from,\n          to: result.to,\n          accumulatedActual: result.accumulatedActual,\n          status: result.status\n        });\n      } else {\n        var indexToUpdate = state.lines[initiativeIndex].result.findIndex(function (tableRow) {\n          return tableRow.id === result.id;\n        });\n\n        if (indexToUpdate >= 0) {\n          state.lines[initiativeIndex].result.splice(indexToUpdate, 1);\n        }\n\n        state.lines[initiativeIndex].result.push({\n          id: result.id,\n          from: result.from,\n          to: result.to,\n          accumulatedActual: result.accumulatedActual,\n          status: result.status\n        });\n      }\n    },\n    removeInitiativeResult: function removeInitiativeResult(state, result) {\n      var initiativeIndex = state.lines.findIndex(function (line) {\n        return line.id == result.initiativeId;\n      });\n      var indexToDelete = state.lines[initiativeIndex].result.findIndex(function (line) {\n        return line.id == result.id;\n      });\n\n      if (indexToDelete >= 0) {\n        state.lines[initiativeIndex].result.splice(indexToDelete, 1);\n      }\n    },\n    removeInitiative: function removeInitiative(state, lineToRemove) {\n      var index = state.lines.findIndex(function (line) {\n        return line == lineToRemove;\n      });\n\n      if (index > -1) {\n        state.lines.splice(index, 1);\n      }\n    },\n    setInitiativeData: function setInitiativeData(state, data) {\n      state.lines = data;\n    }\n  },\n  actions: {\n    loadInitiativeData: function loadInitiativeData(context) {\n      var data = localStorage.getItem(\"initiative\");\n\n      if (data != null) {\n        context.commit(\"setInitiativeData\", JSON.parse(data));\n      }\n    },\n    storeInitiativeData: function storeInitiativeData(context) {\n      localStorage.setItem(\"initiative\", JSON.stringify(context.state.lines));\n    },\n    clearInitiativeData: function clearInitiativeData(context) {\n      context.commit(\"setInitiativeData\", []);\n    },\n    initializeInitiative: function initializeInitiative(context, store) {\n      context.dispatch(\"loadInitiativeData\");\n      store.watch(function (state) {\n        return state.lines;\n      }, function () {\n        return context.dispatch(\"storeInitiativeData\");\n      }, {\n        deep: true\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/store/cart.js"],"names":["initiatives","namespaced","state","lines","getters","mutations","addInitiative","initiative","line","findIndex","id","item","year","strategy","sector","status","name","push","target","result","addInitiativeTarget","initiativeIndex","initiativeId","targetId","quarterYear","quarter","from","to","indexToUpdate","tableRow","splice","removeInitiativeTarget","indexToDelete","addInitiativeResult","resultId","accumulatedActual","removeInitiativeResult","removeInitiative","lineToRemove","index","setInitiativeData","data","actions","loadInitiativeData","context","localStorage","getItem","commit","JSON","parse","storeInitiativeData","setItem","stringify","clearInitiativeData","initializeInitiative","store","dispatch","watch","deep"],"mappings":"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","sourcesContent":["import initiatives from \"./initiatives\";\n\nexport default {\n    namespaced: true,\n    state: {\n        lines: []\n    },\n    getters: {\n        // itemCount: state => state.lines.reduce((total, line) =>\n        //     total + line.quantity, 0),\n        // totalPrice: state => state.lines.reduce((total, line) =>\n        // total + (line.quantity * line.product.price), 0)\n    },\n    mutations: {\n        addInitiative(state, initiative) {\n            let line = state.lines.findIndex(line => line.id == initiative.id);\n\n            if (line > -1) {\n                let item = state.lines[line];\n                item.year = initiative.year;\n                item.strategy = initiative.strategy;\n                item.sector = initiative.sector;\n                item.status = initiative.status;\n                item.name = initiative.name;\n\n            } else {\n                state.lines.push({\n                    id: initiative.id,\n                    year: initiative.year,\n                    strategy: initiative.strategy,\n                    sector: initiative.sector,\n                    status: initiative.status,\n                    name: initiative.name,\n                    target: [],\n                    result: []\n                });\n            }\n        },\n        addInitiativeTarget(state, target) {\n            let initiativeIndex = state.lines.findIndex(line => line.id == target.initiativeId);\n            let targetId = state.lines[initiativeIndex].target.findIndex(line => line.id == target.id);\n\n            if (targetId == -1) {\n                state.lines[initiativeIndex].target.push({\n                    id: target.id,\n                    quarterYear: target.quarterYear,\n                    quarter: target.quarter,\n                    year: target.year,\n                    from: target.from,\n                    to: target.to,\n                    target: target.target\n                });\n            } else {\n                let indexToUpdate = state.lines[initiativeIndex].target.findIndex(\n                    tableRow => tableRow.id === target.id\n                );\n\n                if (indexToUpdate >= 0) {\n                    state.lines[initiativeIndex].target.splice(indexToUpdate, 1);\n                }\n\n                state.lines[initiativeIndex].target.push({\n                    id: target.id,\n                    quarterYear: target.quarterYear,\n                    quarter: target.quarter,\n                    year: target.year,\n                    from: target.from,\n                    to: target.to,\n                    target: target.target\n                });\n            }\n        },\n        removeInitiativeTarget(state, target) {\n            let initiativeIndex = state.lines.findIndex(line => line.id == target.initiativeId);\n            let indexToDelete = state.lines[initiativeIndex].target.findIndex(line => line.id == target.id);\n\n            if (indexToDelete >= 0) {\n                state.lines[initiativeIndex].target.splice(indexToDelete, 1);\n            }\n        },\n        addInitiativeResult(state, result) {\n            let initiativeIndex = state.lines.findIndex(line => line.id == result.initiativeId);\n            let resultId = state.lines[initiativeIndex].result.findIndex(line => line.id == result.id);\n\n            if (resultId == -1) {\n                state.lines[initiativeIndex].result.push({\n                    id: result.id,\n                    from: result.from,\n                    to: result.to,\n                    accumulatedActual: result.accumulatedActual,\n                    status: result.status\n                });\n            } else {\n                let indexToUpdate = state.lines[initiativeIndex].result.findIndex(\n                    tableRow => tableRow.id === result.id\n                );\n\n                if (indexToUpdate >= 0) {\n                    state.lines[initiativeIndex].result.splice(indexToUpdate, 1);\n                }\n\n                state.lines[initiativeIndex].result.push({\n                    id: result.id,\n                    from: result.from,\n                    to: result.to,\n                    accumulatedActual: result.accumulatedActual,\n                    status: result.status\n                });\n            }\n        },\n        removeInitiativeResult(state, result) {\n            let initiativeIndex = state.lines.findIndex(line => line.id == result.initiativeId);\n            let indexToDelete = state.lines[initiativeIndex].result.findIndex(line => line.id == result.id);\n\n            if (indexToDelete >= 0) {\n                state.lines[initiativeIndex].result.splice(indexToDelete, 1);\n            }\n        },\n        removeInitiative(state, lineToRemove) {\n            let index = state.lines.findIndex(line => line == lineToRemove);\n            if (index > -1) {\n                state.lines.splice(index, 1);\n            }\n        },\n        setInitiativeData(state, data) {\n            state.lines = data;\n        }\n    },\n    actions: {\n        loadInitiativeData(context) {\n            let data = localStorage.getItem(\"initiative\");\n\n            if (data != null) {\n                context.commit(\"setInitiativeData\", JSON.parse(data));\n            }\n\n        },\n        storeInitiativeData(context) {\n            localStorage.setItem(\"initiative\", JSON.stringify(context.state.lines));\n        },\n        clearInitiativeData(context) {\n            context.commit(\"setInitiativeData\", []);\n        },\n        initializeInitiative(context, store) {\n            context.dispatch(\"loadInitiativeData\");\n            store.watch(state => state.lines, () => context.dispatch(\"storeInitiativeData\"), { deep: true });\n        }\n    }\n}"]}]}