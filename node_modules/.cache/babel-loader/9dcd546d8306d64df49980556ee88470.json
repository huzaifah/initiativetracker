{"remainingRequest":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Wizard/ThirdStep.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/src/pages/Dashboard/Forms/Wizard/ThirdStep.vue","mtime":1557649050349},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huzaifah/Downloads/vue-material-dashboard-pro-v1.2.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { IconCheckbox } from \"@/components\";\nimport { Pagination } from \"@/components\"; //import results from \"./results\";\n\nimport Fuse from \"fuse.js\";\nimport Swal from \"sweetalert2\";\nimport moment from \"moment\";\nexport default {\n  components: {\n    IconCheckbox: IconCheckbox\n  },\n  props: {\n    record: {\n      default: null\n    }\n  },\n  created: function created() {\n    if (this.record != null && this.record.result != null) this.resultData = this.record.result;\n  },\n  computed: {\n    /***\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n     */\n    queriedResult: function queriedResult() {\n      var result = this.resultData;\n\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n\n      return result.slice(this.from, this.to);\n    },\n    toResult: function toResult() {\n      var highBound = this.fromResult + this.pagination.perPage;\n\n      if (this.totalResult < highBound) {\n        highBound = this.total;\n      }\n\n      return highBound;\n    },\n    fromResult: function fromResult() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    totalResult: function totalResult() {\n      return this.searchedData.length > 0 ? this.searchedData.length : this.resultData.length;\n    }\n  },\n  data: function data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: [\"Quarter\", \"From\", \"To\", \"Target\", \"Actions\"],\n      searchQuery: \"\",\n      propsToSearch: [\"from\", \"to\", \"accumulatedActual\"],\n      resultData: [],\n      searchedData: [],\n      fuseSearch: null,\n      showDialog: false,\n      fromModal: null,\n      toModal: null,\n      accumulatedActual: null,\n      status: null,\n      itemId: null\n    };\n  },\n  methods: {\n    displayAddNew: function displayAddNew() {\n      this.fromModal = moment().format(\"YYYY/MM/DD\");\n      this.toModal = moment().format(\"YYYY/MM/DD\");\n      this.accumulatedActual = \"\";\n      this.status = \"\";\n      this.itemId = null;\n      this.showDialog = true;\n    },\n    validate: function validate() {\n      this.$emit(\"on-validated\", true, this.model);\n      return Promise.resolve(true);\n    },\n    modalClick: function modalClick() {\n      var _this = this;\n\n      this.showDialog = false;\n\n      if (this.itemId == null) {\n        this.resultData.push({\n          id: this.resultData.length + 1,\n          from: moment(this.fromModal).format(\"D MMM YYYY\"),\n          to: moment(this.toModal).format(\"D MMM YYYY\"),\n          accumulatedActual: this.accumulatedActual,\n          status: this.status\n        });\n      } else {\n        var indexToUpdate = this.resultData.findIndex(function (tableRow) {\n          return tableRow.id === _this.itemId;\n        });\n\n        if (indexToUpdate >= 0) {\n          this.resultData.splice(indexToUpdate, 1);\n        }\n\n        this.resultData.push({\n          id: this.itemId,\n          from: moment(this.fromModal).format(\"D MMM YYYY\"),\n          to: moment(this.toModal).format(\"D MMM YYYY\"),\n          accumulatedActual: this.accumulatedActual,\n          status: this.status\n        });\n      }\n\n      this.$emit(\"on-save\", this.resultData);\n    },\n    customSort: function customSort(value) {\n      var _this2 = this;\n\n      return value.sort(function (a, b) {\n        var sortBy = _this2.currentSort;\n\n        if (_this2.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    deleteRow: function deleteRow(item) {\n      var indexToDelete = this.resultData.findIndex(function (tableRow) {\n        return tableRow.id === item.id;\n      });\n\n      if (indexToDelete >= 0) {\n        this.resultData.splice(indexToDelete, 1);\n      }\n    },\n    handleEditResult: function handleEditResult(item) {\n      this.fromModal = moment(item.from, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.toModal = moment(item.to, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.accumulatedActual = item.accumulatedActual;\n      this.status = item.status;\n      this.itemId = item.id;\n      this.showDialog = true;\n    },\n    handleDeleteResult: function handleDeleteResult(item) {\n      var _this3 = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(function (result) {\n        if (result.value) {\n          _this3.deleteResult(item);\n\n          Swal.fire({\n            title: \"Deleted!\",\n            text: \"You deleted \".concat(item.accumulatedActual),\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteResult: function deleteResult(item) {\n      var indexToDelete = this.resultData.findIndex(function (tableRow) {\n        return tableRow.id === item.id;\n      });\n\n      if (indexToDelete >= 0) {\n        this.resultData.splice(indexToDelete, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.resultData, {\n      keys: [\"quarter\", \"accumulatedActual\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery: function searchQuery(value) {\n      var result = this.resultData;\n\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n\n      this.searchedData = result;\n    }\n  }\n};",{"version":3,"sources":["ThirdStep.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"md-layout\">\n      <md-button class=\"md-success\" @click=\"displayAddNew\">Add New</md-button>\n\n      <md-dialog :md-active.sync=\"showDialog\" style=\"width: 70%;\">\n        <md-dialog-title>Set Result</md-dialog-title>\n\n        <md-dialog-content>\n          <md-datepicker v-model=\"fromModal\" md-immediately>\n            <label>From date</label>\n          </md-datepicker>\n\n          <md-datepicker v-model=\"toModal\" md-immediately>\n            <label>To date</label>\n          </md-datepicker>\n\n          <md-field>\n            <label>Accumulated Actual</label>\n            <md-textarea v-model=\"accumulatedActual\"></md-textarea>\n          </md-field>\n\n          <md-field>\n            <label>Status</label>\n            <md-textarea v-model=\"status\"></md-textarea>\n          </md-field>\n        </md-dialog-content>\n\n        <md-dialog-actions>\n          <md-button class=\"md-danger\" @click=\"showDialog = false\">Close</md-button>\n          <md-button class=\"md-success\" @click=\"modalClick\">Save</md-button>\n        </md-dialog-actions>\n      </md-dialog>\n\n      <md-table\n        :value=\"queriedResult\"\n        :md-sort.sync=\"currentSort\"\n        :md-sort-order.sync=\"currentSortOrder\"\n        :md-sort-fn=\"customSort\"\n        class=\"paginated-table table-striped table-hover\"\n      >\n        <md-table-toolbar>\n          <md-field>\n            <label for=\"pages\">Per page</label>\n            <md-select v-model=\"pagination.perPage\" name=\"pages\">\n              <md-option\n                v-for=\"item in pagination.perPageOptions\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              >{{ item }}</md-option>\n            </md-select>\n          </md-field>\n\n          <md-field>\n            <md-input\n              type=\"search\"\n              class=\"mb-3\"\n              clearable\n              style=\"width: 200px\"\n              placeholder=\"Search records\"\n              v-model=\"searchQuery\"\n            ></md-input>\n          </md-field>\n        </md-table-toolbar>\n\n        <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n          <md-table-cell md-label=\"From\">{{ item.from }}</md-table-cell>\n          <md-table-cell md-label=\"To\">{{ item.to }}</md-table-cell>\n          <md-table-cell md-label=\"Accumulated Actual\">{{ item.accumulatedActual }}</md-table-cell>\n          <md-table-cell md-label=\"Status/Remark\">{{ item.status }}</md-table-cell>\n\n          <md-table-cell md-label=\"Actions\">\n            <md-button\n              class=\"md-just-icon md-warning md-simple\"\n              @click.native=\"handleEditResult(item)\"\n            >\n              <md-icon>dvr</md-icon>\n            </md-button>\n            <md-button\n              class=\"md-just-icon md-danger md-simple\"\n              @click.native=\"handleDeleteResult(item)\"\n            >\n              <md-icon>close</md-icon>\n            </md-button>\n          </md-table-cell>\n        </md-table-row>\n      </md-table>\n    </div>\n  </div>\n</template>\n<script>\nimport { IconCheckbox } from \"@/components\";\nimport { Pagination } from \"@/components\";\n//import results from \"./results\";\nimport Fuse from \"fuse.js\";\nimport Swal from \"sweetalert2\";\nimport moment from \"moment\";\n\nexport default {\n  components: {\n    IconCheckbox\n  },\n  props: {\n    record: {\n      default: null\n    }\n  },\n  created() {\n    if (this.record != null && this.record.result != null)\n      this.resultData = this.record.result;\n  },\n  computed: {\n    /***\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n     */\n    queriedResult() {\n      let result = this.resultData;\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n      return result.slice(this.from, this.to);\n    },\n    toResult() {\n      let highBound = this.fromResult + this.pagination.perPage;\n      if (this.totalResult < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    fromResult() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    totalResult() {\n      return this.searchedData.length > 0\n        ? this.searchedData.length\n        : this.resultData.length;\n    }\n  },\n  data() {\n    return {\n      currentSort: \"name\",\n      currentSortOrder: \"asc\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: [\"Quarter\", \"From\", \"To\", \"Target\", \"Actions\"],\n      searchQuery: \"\",\n      propsToSearch: [\"from\", \"to\", \"accumulatedActual\"],\n      resultData: [],\n      searchedData: [],\n      fuseSearch: null,\n      showDialog: false,\n      fromModal: null,\n      toModal: null,\n      accumulatedActual: null,\n      status: null,\n      itemId: null\n    };\n  },\n  methods: {\n    displayAddNew() {\n      this.fromModal = moment().format(\"YYYY/MM/DD\");\n      this.toModal = moment().format(\"YYYY/MM/DD\");\n      this.accumulatedActual = \"\";\n      this.status = \"\";\n      this.itemId = null;\n      this.showDialog = true;\n    },\n    validate() {\n      this.$emit(\"on-validated\", true, this.model);\n\n      return Promise.resolve(true);\n    },\n    modalClick() {\n      this.showDialog = false;\n\n      if (this.itemId == null) {\n        this.resultData.push({\n          id: this.resultData.length + 1,\n          from: moment(this.fromModal).format(\"D MMM YYYY\"),\n          to: moment(this.toModal).format(\"D MMM YYYY\"),\n          accumulatedActual: this.accumulatedActual,\n          status: this.status\n        });\n      } else {\n        let indexToUpdate = this.resultData.findIndex(\n          tableRow => tableRow.id === this.itemId\n        );\n\n        if (indexToUpdate >= 0) {\n          this.resultData.splice(indexToUpdate, 1);\n        }\n\n        this.resultData.push({\n          id: this.itemId,\n          from: moment(this.fromModal).format(\"D MMM YYYY\"),\n          to: moment(this.toModal).format(\"D MMM YYYY\"),\n          accumulatedActual: this.accumulatedActual,\n          status: this.status\n        });\n      }\n\n      this.$emit(\"on-save\", this.resultData);\n    },\n    customSort(value) {\n      return value.sort((a, b) => {\n        const sortBy = this.currentSort;\n        if (this.currentSortOrder === \"desc\") {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    deleteRow(item) {\n      let indexToDelete = this.resultData.findIndex(\n        tableRow => tableRow.id === item.id\n      );\n      if (indexToDelete >= 0) {\n        this.resultData.splice(indexToDelete, 1);\n      }\n    },\n    handleEditResult(item) {\n      this.fromModal = moment(item.from, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.toModal = moment(item.to, \"D MMM YYYY\").format(\"YYYY/MM/DD\");\n      this.accumulatedActual = item.accumulatedActual;\n      this.status = item.status;\n      this.itemId = item.id;\n      this.showDialog = true;\n    },\n    handleDeleteResult(item) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: `You won't be able to revert this!`,\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"md-button md-success btn-fill\",\n        cancelButtonClass: \"md-button md-danger btn-fill\",\n        confirmButtonText: \"Yes, delete it!\",\n        buttonsStyling: false\n      }).then(result => {\n        if (result.value) {\n          this.deleteResult(item);\n          Swal.fire({\n            title: \"Deleted!\",\n            text: `You deleted ${item.accumulatedActual}`,\n            type: \"success\",\n            confirmButtonClass: \"md-button md-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteResult(item) {\n      let indexToDelete = this.resultData.findIndex(\n        tableRow => tableRow.id === item.id\n      );\n      if (indexToDelete >= 0) {\n        this.resultData.splice(indexToDelete, 1);\n      }\n    }\n  },\n  mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.resultData, {\n      keys: [\"quarter\", \"accumulatedActual\"],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery(value) {\n      let result = this.resultData;\n      if (value !== \"\") {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n      this.searchedData = result;\n    }\n  }\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/pages/Dashboard/Forms/Wizard"}]}